
import numpy
import math
import cmath
from decimal import *
from scipy import weave
from scipy.weave import converters
import Image, ImageDraw

#######################################################################
#								      								  #
#		M	A	I	N	  ()	                                      #
#								                                      #
#######################################################################


zoom = input('Enter magnification: ')
scale = 1.0000000000/(zoom)

maxit = int(math.pow(zoom, 1/3))*1500

realcent = input('Enter real coordinate for center: ')
imagcent = input('Enter imag coordinate for center: ')
realconst = input('Enter real value for c in p(z) = z^2 + c: ')
imagconst = input('Enter imag value for c in p(z) = z^2 + c: ')
#realz_0 = input('Enter real value for the fixed repelling point z_0: ')
#imagz_0 = input('Enter imag value for the fixed repelling point z_0: ')
plmin = input('Enter "1" for + & "0" for - in a_0 = (1 +/- sqrt(1 - 4c))/2: ')
erad = input('Define the radius for e: ')
lim1 = input('Enter escape limit: ')


#z_0 = complex(realz_0, imagz_0)
centre = complex(realcent, imagcent)

c = ((-5.0000000000 + 5.0000000000j)*scale + centre)
#c = complex(-erad, erad)


im = Image.new("RGB", (4000, 4000), (0,0,0))

#d = complex(realconst, imagconst)

draw = ImageDraw.Draw(im)

mndmtx = []
for i in xrange(4000):
	
	for j in xrange(4000):
		
		realval = c.real
		imagval = c.imag
		
							
					
		code2 = """
					#include <cmath>
					#include <math.h>
					#include <complex>
					using namespace std;
					long double lim = lim1;
								
															
					complex<double> val;
					complex<double> z;
					z = complex<double>(realval, imagval);
					val = complex<double>(realconst, imagconst);
					int i = 0;
					complex<double> a_0;
					//complex<double>z_0(realz_0, imagz_0);
					complex<double>z_0;
					complex<double>d(realconst, imagconst);
					
					if (plmin == 1) {a_0 = (1.00000000000 + sqrt(1.0000000000 - 4.0000000000000*d))/2.0000000;
									z_0 = (1.00000000000 - sqrt(1.0000000000 - 4.0000000000000*d))/2.0000000;
					}
	
					else{ a_0 = (1.00000000000 - sqrt(1.0000000000 - 4.0000000000000*d))/2.0000000;
	
							z_0 = (1.00000000000 + sqrt(1.0000000000 - 4.0000000000000*d))/2.0000000;
					}
			
complex<double>a_1 = (-d )/(2.00000*a_0 - pow(2.0000000*z_0, 1.0));
complex<double>a_2 = (-d -a_1*a_1)/(2.00000*a_0 - pow(2.0000000*z_0, 2.0));
complex<double>a_3 = (-d -2.00000*a_2*a_1-2.00000*a_1*a_2)/(2.00000*a_0 - pow(2.0000000*z_0, 3.0));
complex<double>a_4 = (-d -2.00000*a_3*a_1-a_2*a_2-2.00000*a_1*a_3)/(2.00000*a_0 - pow(2.0000000*z_0, 4.0));
complex<double>a_5 = (-d -2.00000*a_4*a_1-2.00000*a_3*a_2-2.00000*a_2*a_3-2.00000*a_1*a_4)/(2.00000*a_0 - pow(2.0000000*z_0, 5.0));
complex<double>a_6 = (-d -2.00000*a_5*a_1-2.00000*a_4*a_2-a_3*a_3-2.00000*a_2*a_4-2.00000*a_1*a_5)/(2.00000*a_0 - pow(2.0000000*z_0, 6.0));
complex<double>a_7 = (-d -2.00000*a_6*a_1-2.00000*a_5*a_2-2.00000*a_4*a_3-2.00000*a_3*a_4-2.00000*a_2*a_5-2.00000*a_1*a_6)/(2.00000*a_0 - pow(2.0000000*z_0, 7.0));
complex<double>a_8 = (-d -2.00000*a_7*a_1-2.00000*a_6*a_2-2.00000*a_5*a_3-a_4*a_4-2.00000*a_3*a_5-2.00000*a_2*a_6-2.00000*a_1*a_7)/(2.00000*a_0 - pow(2.0000000*z_0, 8.0));
complex<double>a_9 = (-d -2.00000*a_8*a_1-2.00000*a_7*a_2-2.00000*a_6*a_3-2.00000*a_5*a_4-2.00000*a_4*a_5-2.00000*a_3*a_6-2.00000*a_2*a_7-2.00000*a_1*a_8)/(2.00000*a_0 - pow(2.0000000*z_0, 9.0));
complex<double>a_10 = (-d -2.00000*a_9*a_1-2.00000*a_8*a_2-2.00000*a_7*a_3-2.00000*a_6*a_4-a_5*a_5-2.00000*a_4*a_6-2.00000*a_3*a_7-2.00000*a_2*a_8-2.00000*a_1*a_9)/(2.00000*a_0 - pow(2.0000000*z_0, 10.0));
complex<double>a_11 = (-d -2.00000*a_10*a_1-2.00000*a_9*a_2-2.00000*a_8*a_3-2.00000*a_7*a_4-2.00000*a_6*a_5-2.00000*a_5*a_6-2.00000*a_4*a_7-2.00000*a_3*a_8-2.00000*a_2*a_9-2.00000*a_1*a_10)/(2.00000*a_0 - pow(2.0000000*z_0, 11.0));
complex<double>a_12 = (-d -2.00000*a_11*a_1-2.00000*a_10*a_2-2.00000*a_9*a_3-2.00000*a_8*a_4-2.00000*a_7*a_5-a_6*a_6-2.00000*a_5*a_7-2.00000*a_4*a_8-2.00000*a_3*a_9-2.00000*a_2*a_10-2.00000*a_1*a_11)/(2.00000*a_0 - pow(2.0000000*z_0, 12.0));
complex<double>a_13 = (-d -2.00000*a_12*a_1-2.00000*a_11*a_2-2.00000*a_10*a_3-2.00000*a_9*a_4-2.00000*a_8*a_5-2.00000*a_7*a_6-2.00000*a_6*a_7-2.00000*a_5*a_8-2.00000*a_4*a_9-2.00000*a_3*a_10-2.00000*a_2*a_11-2.00000*a_1*a_12)/(2.00000*a_0 - pow(2.0000000*z_0, 13.0));
complex<double>a_14 = (-d -2.00000*a_13*a_1-2.00000*a_12*a_2-2.00000*a_11*a_3-2.00000*a_10*a_4-2.00000*a_9*a_5-2.00000*a_8*a_6-a_7*a_7-2.00000*a_6*a_8-2.00000*a_5*a_9-2.00000*a_4*a_10-2.00000*a_3*a_11-2.00000*a_2*a_12-2.00000*a_1*a_13)/(2.00000*a_0 - pow(2.0000000*z_0, 14.0));
complex<double>a_15 = (-d -2.00000*a_14*a_1-2.00000*a_13*a_2-2.00000*a_12*a_3-2.00000*a_11*a_4-2.00000*a_10*a_5-2.00000*a_9*a_6-2.00000*a_8*a_7-2.00000*a_7*a_8-2.00000*a_6*a_9-2.00000*a_5*a_10-2.00000*a_4*a_11-2.00000*a_3*a_12-2.00000*a_2*a_13-2.00000*a_1*a_14)/(2.00000*a_0 - pow(2.0000000*z_0, 15.0));
complex<double>a_16 = (-d -2.00000*a_15*a_1-2.00000*a_14*a_2-2.00000*a_13*a_3-2.00000*a_12*a_4-2.00000*a_11*a_5-2.00000*a_10*a_6-2.00000*a_9*a_7-a_8*a_8-2.00000*a_7*a_9-2.00000*a_6*a_10-2.00000*a_5*a_11-2.00000*a_4*a_12-2.00000*a_3*a_13-2.00000*a_2*a_14-2.00000*a_1*a_15)/(2.00000*a_0 - pow(2.0000000*z_0, 16.0));
complex<double>a_17 = (-d -2.00000*a_16*a_1-2.00000*a_15*a_2-2.00000*a_14*a_3-2.00000*a_13*a_4-2.00000*a_12*a_5-2.00000*a_11*a_6-2.00000*a_10*a_7-2.00000*a_9*a_8-2.00000*a_8*a_9-2.00000*a_7*a_10-2.00000*a_6*a_11-2.00000*a_5*a_12-2.00000*a_4*a_13-2.00000*a_3*a_14-2.00000*a_2*a_15-2.00000*a_1*a_16)/(2.00000*a_0 - pow(2.0000000*z_0, 17.0));
complex<double>a_18 = (-d -2.00000*a_17*a_1-2.00000*a_16*a_2-2.00000*a_15*a_3-2.00000*a_14*a_4-2.00000*a_13*a_5-2.00000*a_12*a_6-2.00000*a_11*a_7-2.00000*a_10*a_8-a_9*a_9-2.00000*a_8*a_10-2.00000*a_7*a_11-2.00000*a_6*a_12-2.00000*a_5*a_13-2.00000*a_4*a_14-2.00000*a_3*a_15-2.00000*a_2*a_16-2.00000*a_1*a_17)/(2.00000*a_0 - pow(2.0000000*z_0, 18.0));
complex<double>a_19 = (-d -2.00000*a_18*a_1-2.00000*a_17*a_2-2.00000*a_16*a_3-2.00000*a_15*a_4-2.00000*a_14*a_5-2.00000*a_13*a_6-2.00000*a_12*a_7-2.00000*a_11*a_8-2.00000*a_10*a_9-2.00000*a_9*a_10-2.00000*a_8*a_11-2.00000*a_7*a_12-2.00000*a_6*a_13-2.00000*a_5*a_14-2.00000*a_4*a_15-2.00000*a_3*a_16-2.00000*a_2*a_17-2.00000*a_1*a_18)/(2.00000*a_0 - pow(2.0000000*z_0, 19.0));
complex<double>a_20 = (-d -2.00000*a_19*a_1-2.00000*a_18*a_2-2.00000*a_17*a_3-2.00000*a_16*a_4-2.00000*a_15*a_5-2.00000*a_14*a_6-2.00000*a_13*a_7-2.00000*a_12*a_8-2.00000*a_11*a_9-a_10*a_10-2.00000*a_9*a_11-2.00000*a_8*a_12-2.00000*a_7*a_13-2.00000*a_6*a_14-2.00000*a_5*a_15-2.00000*a_4*a_16-2.00000*a_3*a_17-2.00000*a_2*a_18-2.00000*a_1*a_19)/(2.00000*a_0 - pow(2.0000000*z_0, 20.0));
complex<double>a_21 = (-d -2.00000*a_20*a_1-2.00000*a_19*a_2-2.00000*a_18*a_3-2.00000*a_17*a_4-2.00000*a_16*a_5-2.00000*a_15*a_6-2.00000*a_14*a_7-2.00000*a_13*a_8-2.00000*a_12*a_9-2.00000*a_11*a_10-2.00000*a_10*a_11-2.00000*a_9*a_12-2.00000*a_8*a_13-2.00000*a_7*a_14-2.00000*a_6*a_15-2.00000*a_5*a_16-2.00000*a_4*a_17-2.00000*a_3*a_18-2.00000*a_2*a_19-2.00000*a_1*a_20)/(2.00000*a_0 - pow(2.0000000*z_0, 21.0));
complex<double>a_22 = (-d -2.00000*a_21*a_1-2.00000*a_20*a_2-2.00000*a_19*a_3-2.00000*a_18*a_4-2.00000*a_17*a_5-2.00000*a_16*a_6-2.00000*a_15*a_7-2.00000*a_14*a_8-2.00000*a_13*a_9-2.00000*a_12*a_10-a_11*a_11-2.00000*a_10*a_12-2.00000*a_9*a_13-2.00000*a_8*a_14-2.00000*a_7*a_15-2.00000*a_6*a_16-2.00000*a_5*a_17-2.00000*a_4*a_18-2.00000*a_3*a_19-2.00000*a_2*a_20-2.00000*a_1*a_21)/(2.00000*a_0 - pow(2.0000000*z_0, 22.0));
complex<double>a_23 = (-d -2.00000*a_22*a_1-2.00000*a_21*a_2-2.00000*a_20*a_3-2.00000*a_19*a_4-2.00000*a_18*a_5-2.00000*a_17*a_6-2.00000*a_16*a_7-2.00000*a_15*a_8-2.00000*a_14*a_9-2.00000*a_13*a_10-2.00000*a_12*a_11-2.00000*a_11*a_12-2.00000*a_10*a_13-2.00000*a_9*a_14-2.00000*a_8*a_15-2.00000*a_7*a_16-2.00000*a_6*a_17-2.00000*a_5*a_18-2.00000*a_4*a_19-2.00000*a_3*a_20-2.00000*a_2*a_21-2.00000*a_1*a_22)/(2.00000*a_0 - pow(2.0000000*z_0, 23.0));
complex<double>a_24 = (-d -2.00000*a_23*a_1-2.00000*a_22*a_2-2.00000*a_21*a_3-2.00000*a_20*a_4-2.00000*a_19*a_5-2.00000*a_18*a_6-2.00000*a_17*a_7-2.00000*a_16*a_8-2.00000*a_15*a_9-2.00000*a_14*a_10-2.00000*a_13*a_11-a_12*a_12-2.00000*a_11*a_13-2.00000*a_10*a_14-2.00000*a_9*a_15-2.00000*a_8*a_16-2.00000*a_7*a_17-2.00000*a_6*a_18-2.00000*a_5*a_19-2.00000*a_4*a_20-2.00000*a_3*a_21-2.00000*a_2*a_22-2.00000*a_1*a_23)/(2.00000*a_0 - pow(2.0000000*z_0, 24.0));
complex<double>a_25 = (-d -2.00000*a_24*a_1-2.00000*a_23*a_2-2.00000*a_22*a_3-2.00000*a_21*a_4-2.00000*a_20*a_5-2.00000*a_19*a_6-2.00000*a_18*a_7-2.00000*a_17*a_8-2.00000*a_16*a_9-2.00000*a_15*a_10-2.00000*a_14*a_11-2.00000*a_13*a_12-2.00000*a_12*a_13-2.00000*a_11*a_14-2.00000*a_10*a_15-2.00000*a_9*a_16-2.00000*a_8*a_17-2.00000*a_7*a_18-2.00000*a_6*a_19-2.00000*a_5*a_20-2.00000*a_4*a_21-2.00000*a_3*a_22-2.00000*a_2*a_23-2.00000*a_1*a_24)/(2.00000*a_0 - pow(2.0000000*z_0, 25.0));
complex<double>a_26 = (-d -2.00000*a_25*a_1-2.00000*a_24*a_2-2.00000*a_23*a_3-2.00000*a_22*a_4-2.00000*a_21*a_5-2.00000*a_20*a_6-2.00000*a_19*a_7-2.00000*a_18*a_8-2.00000*a_17*a_9-2.00000*a_16*a_10-2.00000*a_15*a_11-2.00000*a_14*a_12-a_13*a_13-2.00000*a_12*a_14-2.00000*a_11*a_15-2.00000*a_10*a_16-2.00000*a_9*a_17-2.00000*a_8*a_18-2.00000*a_7*a_19-2.00000*a_6*a_20-2.00000*a_5*a_21-2.00000*a_4*a_22-2.00000*a_3*a_23-2.00000*a_2*a_24-2.00000*a_1*a_25)/(2.00000*a_0 - pow(2.0000000*z_0, 26.0));
complex<double>a_27 = (-d -2.00000*a_26*a_1-2.00000*a_25*a_2-2.00000*a_24*a_3-2.00000*a_23*a_4-2.00000*a_22*a_5-2.00000*a_21*a_6-2.00000*a_20*a_7-2.00000*a_19*a_8-2.00000*a_18*a_9-2.00000*a_17*a_10-2.00000*a_16*a_11-2.00000*a_15*a_12-2.00000*a_14*a_13-2.00000*a_13*a_14-2.00000*a_12*a_15-2.00000*a_11*a_16-2.00000*a_10*a_17-2.00000*a_9*a_18-2.00000*a_8*a_19-2.00000*a_7*a_20-2.00000*a_6*a_21-2.00000*a_5*a_22-2.00000*a_4*a_23-2.00000*a_3*a_24-2.00000*a_2*a_25-2.00000*a_1*a_26)/(2.00000*a_0 - pow(2.0000000*z_0, 27.0));
complex<double>a_28 = (-d -2.00000*a_27*a_1-2.00000*a_26*a_2-2.00000*a_25*a_3-2.00000*a_24*a_4-2.00000*a_23*a_5-2.00000*a_22*a_6-2.00000*a_21*a_7-2.00000*a_20*a_8-2.00000*a_19*a_9-2.00000*a_18*a_10-2.00000*a_17*a_11-2.00000*a_16*a_12-2.00000*a_15*a_13-a_14*a_14-2.00000*a_13*a_15-2.00000*a_12*a_16-2.00000*a_11*a_17-2.00000*a_10*a_18-2.00000*a_9*a_19-2.00000*a_8*a_20-2.00000*a_7*a_21-2.00000*a_6*a_22-2.00000*a_5*a_23-2.00000*a_4*a_24-2.00000*a_3*a_25-2.00000*a_2*a_26-2.00000*a_1*a_27)/(2.00000*a_0 - pow(2.0000000*z_0, 28.0));
complex<double>a_29 = (-d -2.00000*a_28*a_1-2.00000*a_27*a_2-2.00000*a_26*a_3-2.00000*a_25*a_4-2.00000*a_24*a_5-2.00000*a_23*a_6-2.00000*a_22*a_7-2.00000*a_21*a_8-2.00000*a_20*a_9-2.00000*a_19*a_10-2.00000*a_18*a_11-2.00000*a_17*a_12-2.00000*a_16*a_13-2.00000*a_15*a_14-2.00000*a_14*a_15-2.00000*a_13*a_16-2.00000*a_12*a_17-2.00000*a_11*a_18-2.00000*a_10*a_19-2.00000*a_9*a_20-2.00000*a_8*a_21-2.00000*a_7*a_22-2.00000*a_6*a_23-2.00000*a_5*a_24-2.00000*a_4*a_25-2.00000*a_3*a_26-2.00000*a_2*a_27-2.00000*a_1*a_28)/(2.00000*a_0 - pow(2.0000000*z_0, 29.0));
complex<double>a_30 = (-d -2.00000*a_29*a_1-2.00000*a_28*a_2-2.00000*a_27*a_3-2.00000*a_26*a_4-2.00000*a_25*a_5-2.00000*a_24*a_6-2.00000*a_23*a_7-2.00000*a_22*a_8-2.00000*a_21*a_9-2.00000*a_20*a_10-2.00000*a_19*a_11-2.00000*a_18*a_12-2.00000*a_17*a_13-2.00000*a_16*a_14-a_15*a_15-2.00000*a_14*a_16-2.00000*a_13*a_17-2.00000*a_12*a_18-2.00000*a_11*a_19-2.00000*a_10*a_20-2.00000*a_9*a_21-2.00000*a_8*a_22-2.00000*a_7*a_23-2.00000*a_6*a_24-2.00000*a_5*a_25-2.00000*a_4*a_26-2.00000*a_3*a_27-2.00000*a_2*a_28-2.00000*a_1*a_29)/(2.00000*a_0 - pow(2.0000000*z_0, 30.0));
complex<double>a_31 = (-d -2.00000*a_30*a_1-2.00000*a_29*a_2-2.00000*a_28*a_3-2.00000*a_27*a_4-2.00000*a_26*a_5-2.00000*a_25*a_6-2.00000*a_24*a_7-2.00000*a_23*a_8-2.00000*a_22*a_9-2.00000*a_21*a_10-2.00000*a_20*a_11-2.00000*a_19*a_12-2.00000*a_18*a_13-2.00000*a_17*a_14-2.00000*a_16*a_15-2.00000*a_15*a_16-2.00000*a_14*a_17-2.00000*a_13*a_18-2.00000*a_12*a_19-2.00000*a_11*a_20-2.00000*a_10*a_21-2.00000*a_9*a_22-2.00000*a_8*a_23-2.00000*a_7*a_24-2.00000*a_6*a_25-2.00000*a_5*a_26-2.00000*a_4*a_27-2.00000*a_3*a_28-2.00000*a_2*a_29-2.00000*a_1*a_30)/(2.00000*a_0 - pow(2.0000000*z_0, 31.0));
complex<double>a_32 = (-d -2.00000*a_31*a_1-2.00000*a_30*a_2-2.00000*a_29*a_3-2.00000*a_28*a_4-2.00000*a_27*a_5-2.00000*a_26*a_6-2.00000*a_25*a_7-2.00000*a_24*a_8-2.00000*a_23*a_9-2.00000*a_22*a_10-2.00000*a_21*a_11-2.00000*a_20*a_12-2.00000*a_19*a_13-2.00000*a_18*a_14-2.00000*a_17*a_15-a_16*a_16-2.00000*a_15*a_17-2.00000*a_14*a_18-2.00000*a_13*a_19-2.00000*a_12*a_20-2.00000*a_11*a_21-2.00000*a_10*a_22-2.00000*a_9*a_23-2.00000*a_8*a_24-2.00000*a_7*a_25-2.00000*a_6*a_26-2.00000*a_5*a_27-2.00000*a_4*a_28-2.00000*a_3*a_29-2.00000*a_2*a_30-2.00000*a_1*a_31)/(2.00000*a_0 - pow(2.0000000*z_0, 32.0));
complex<double>a_33 = (-d -2.00000*a_32*a_1-2.00000*a_31*a_2-2.00000*a_30*a_3-2.00000*a_29*a_4-2.00000*a_28*a_5-2.00000*a_27*a_6-2.00000*a_26*a_7-2.00000*a_25*a_8-2.00000*a_24*a_9-2.00000*a_23*a_10-2.00000*a_22*a_11-2.00000*a_21*a_12-2.00000*a_20*a_13-2.00000*a_19*a_14-2.00000*a_18*a_15-2.00000*a_17*a_16-2.00000*a_16*a_17-2.00000*a_15*a_18-2.00000*a_14*a_19-2.00000*a_13*a_20-2.00000*a_12*a_21-2.00000*a_11*a_22-2.00000*a_10*a_23-2.00000*a_9*a_24-2.00000*a_8*a_25-2.00000*a_7*a_26-2.00000*a_6*a_27-2.00000*a_5*a_28-2.00000*a_4*a_29-2.00000*a_3*a_30-2.00000*a_2*a_31-2.00000*a_1*a_32)/(2.00000*a_0 - pow(2.0000000*z_0, 33.0));
complex<double>a_34 = (-d -2.00000*a_33*a_1-2.00000*a_32*a_2-2.00000*a_31*a_3-2.00000*a_30*a_4-2.00000*a_29*a_5-2.00000*a_28*a_6-2.00000*a_27*a_7-2.00000*a_26*a_8-2.00000*a_25*a_9-2.00000*a_24*a_10-2.00000*a_23*a_11-2.00000*a_22*a_12-2.00000*a_21*a_13-2.00000*a_20*a_14-2.00000*a_19*a_15-2.00000*a_18*a_16-a_17*a_17-2.00000*a_16*a_18-2.00000*a_15*a_19-2.00000*a_14*a_20-2.00000*a_13*a_21-2.00000*a_12*a_22-2.00000*a_11*a_23-2.00000*a_10*a_24-2.00000*a_9*a_25-2.00000*a_8*a_26-2.00000*a_7*a_27-2.00000*a_6*a_28-2.00000*a_5*a_29-2.00000*a_4*a_30-2.00000*a_3*a_31-2.00000*a_2*a_32-2.00000*a_1*a_33)/(2.00000*a_0 - pow(2.0000000*z_0, 34.0));
complex<double>a_35 = (-d -2.00000*a_34*a_1-2.00000*a_33*a_2-2.00000*a_32*a_3-2.00000*a_31*a_4-2.00000*a_30*a_5-2.00000*a_29*a_6-2.00000*a_28*a_7-2.00000*a_27*a_8-2.00000*a_26*a_9-2.00000*a_25*a_10-2.00000*a_24*a_11-2.00000*a_23*a_12-2.00000*a_22*a_13-2.00000*a_21*a_14-2.00000*a_20*a_15-2.00000*a_19*a_16-2.00000*a_18*a_17-2.00000*a_17*a_18-2.00000*a_16*a_19-2.00000*a_15*a_20-2.00000*a_14*a_21-2.00000*a_13*a_22-2.00000*a_12*a_23-2.00000*a_11*a_24-2.00000*a_10*a_25-2.00000*a_9*a_26-2.00000*a_8*a_27-2.00000*a_7*a_28-2.00000*a_6*a_29-2.00000*a_5*a_30-2.00000*a_4*a_31-2.00000*a_3*a_32-2.00000*a_2*a_33-2.00000*a_1*a_34)/(2.00000*a_0 - pow(2.0000000*z_0, 35.0));
complex<double>a_36 = (-d -2.00000*a_35*a_1-2.00000*a_34*a_2-2.00000*a_33*a_3-2.00000*a_32*a_4-2.00000*a_31*a_5-2.00000*a_30*a_6-2.00000*a_29*a_7-2.00000*a_28*a_8-2.00000*a_27*a_9-2.00000*a_26*a_10-2.00000*a_25*a_11-2.00000*a_24*a_12-2.00000*a_23*a_13-2.00000*a_22*a_14-2.00000*a_21*a_15-2.00000*a_20*a_16-2.00000*a_19*a_17-a_18*a_18-2.00000*a_17*a_19-2.00000*a_16*a_20-2.00000*a_15*a_21-2.00000*a_14*a_22-2.00000*a_13*a_23-2.00000*a_12*a_24-2.00000*a_11*a_25-2.00000*a_10*a_26-2.00000*a_9*a_27-2.00000*a_8*a_28-2.00000*a_7*a_29-2.00000*a_6*a_30-2.00000*a_5*a_31-2.00000*a_4*a_32-2.00000*a_3*a_33-2.00000*a_2*a_34-2.00000*a_1*a_35)/(2.00000*a_0 - pow(2.0000000*z_0, 36.0));
complex<double>a_37 = (-d -2.00000*a_36*a_1-2.00000*a_35*a_2-2.00000*a_34*a_3-2.00000*a_33*a_4-2.00000*a_32*a_5-2.00000*a_31*a_6-2.00000*a_30*a_7-2.00000*a_29*a_8-2.00000*a_28*a_9-2.00000*a_27*a_10-2.00000*a_26*a_11-2.00000*a_25*a_12-2.00000*a_24*a_13-2.00000*a_23*a_14-2.00000*a_22*a_15-2.00000*a_21*a_16-2.00000*a_20*a_17-2.00000*a_19*a_18-2.00000*a_18*a_19-2.00000*a_17*a_20-2.00000*a_16*a_21-2.00000*a_15*a_22-2.00000*a_14*a_23-2.00000*a_13*a_24-2.00000*a_12*a_25-2.00000*a_11*a_26-2.00000*a_10*a_27-2.00000*a_9*a_28-2.00000*a_8*a_29-2.00000*a_7*a_30-2.00000*a_6*a_31-2.00000*a_5*a_32-2.00000*a_4*a_33-2.00000*a_3*a_34-2.00000*a_2*a_35-2.00000*a_1*a_36)/(2.00000*a_0 - pow(2.0000000*z_0, 37.0));
complex<double>a_38 = (-d -2.00000*a_37*a_1-2.00000*a_36*a_2-2.00000*a_35*a_3-2.00000*a_34*a_4-2.00000*a_33*a_5-2.00000*a_32*a_6-2.00000*a_31*a_7-2.00000*a_30*a_8-2.00000*a_29*a_9-2.00000*a_28*a_10-2.00000*a_27*a_11-2.00000*a_26*a_12-2.00000*a_25*a_13-2.00000*a_24*a_14-2.00000*a_23*a_15-2.00000*a_22*a_16-2.00000*a_21*a_17-2.00000*a_20*a_18-a_19*a_19-2.00000*a_18*a_20-2.00000*a_17*a_21-2.00000*a_16*a_22-2.00000*a_15*a_23-2.00000*a_14*a_24-2.00000*a_13*a_25-2.00000*a_12*a_26-2.00000*a_11*a_27-2.00000*a_10*a_28-2.00000*a_9*a_29-2.00000*a_8*a_30-2.00000*a_7*a_31-2.00000*a_6*a_32-2.00000*a_5*a_33-2.00000*a_4*a_34-2.00000*a_3*a_35-2.00000*a_2*a_36-2.00000*a_1*a_37)/(2.00000*a_0 - pow(2.0000000*z_0, 38.0));
complex<double>a_39 = (-d -2.00000*a_38*a_1-2.00000*a_37*a_2-2.00000*a_36*a_3-2.00000*a_35*a_4-2.00000*a_34*a_5-2.00000*a_33*a_6-2.00000*a_32*a_7-2.00000*a_31*a_8-2.00000*a_30*a_9-2.00000*a_29*a_10-2.00000*a_28*a_11-2.00000*a_27*a_12-2.00000*a_26*a_13-2.00000*a_25*a_14-2.00000*a_24*a_15-2.00000*a_23*a_16-2.00000*a_22*a_17-2.00000*a_21*a_18-2.00000*a_20*a_19-2.00000*a_19*a_20-2.00000*a_18*a_21-2.00000*a_17*a_22-2.00000*a_16*a_23-2.00000*a_15*a_24-2.00000*a_14*a_25-2.00000*a_13*a_26-2.00000*a_12*a_27-2.00000*a_11*a_28-2.00000*a_10*a_29-2.00000*a_9*a_30-2.00000*a_8*a_31-2.00000*a_7*a_32-2.00000*a_6*a_33-2.00000*a_5*a_34-2.00000*a_4*a_35-2.00000*a_3*a_36-2.00000*a_2*a_37-2.00000*a_1*a_38)/(2.00000*a_0 - pow(2.0000000*z_0, 39.0));
complex<double>a_40 = (-d -2.00000*a_39*a_1-2.00000*a_38*a_2-2.00000*a_37*a_3-2.00000*a_36*a_4-2.00000*a_35*a_5-2.00000*a_34*a_6-2.00000*a_33*a_7-2.00000*a_32*a_8-2.00000*a_31*a_9-2.00000*a_30*a_10-2.00000*a_29*a_11-2.00000*a_28*a_12-2.00000*a_27*a_13-2.00000*a_26*a_14-2.00000*a_25*a_15-2.00000*a_24*a_16-2.00000*a_23*a_17-2.00000*a_22*a_18-2.00000*a_21*a_19-a_20*a_20-2.00000*a_19*a_21-2.00000*a_18*a_22-2.00000*a_17*a_23-2.00000*a_16*a_24-2.00000*a_15*a_25-2.00000*a_14*a_26-2.00000*a_13*a_27-2.00000*a_12*a_28-2.00000*a_11*a_29-2.00000*a_10*a_30-2.00000*a_9*a_31-2.00000*a_8*a_32-2.00000*a_7*a_33-2.00000*a_6*a_34-2.00000*a_5*a_35-2.00000*a_4*a_36-2.00000*a_3*a_37-2.00000*a_2*a_38-2.00000*a_1*a_39)/(2.00000*a_0 - pow(2.0000000*z_0, 40.0));
complex<double>a_41 = (-d -2.00000*a_40*a_1-2.00000*a_39*a_2-2.00000*a_38*a_3-2.00000*a_37*a_4-2.00000*a_36*a_5-2.00000*a_35*a_6-2.00000*a_34*a_7-2.00000*a_33*a_8-2.00000*a_32*a_9-2.00000*a_31*a_10-2.00000*a_30*a_11-2.00000*a_29*a_12-2.00000*a_28*a_13-2.00000*a_27*a_14-2.00000*a_26*a_15-2.00000*a_25*a_16-2.00000*a_24*a_17-2.00000*a_23*a_18-2.00000*a_22*a_19-2.00000*a_21*a_20-2.00000*a_20*a_21-2.00000*a_19*a_22-2.00000*a_18*a_23-2.00000*a_17*a_24-2.00000*a_16*a_25-2.00000*a_15*a_26-2.00000*a_14*a_27-2.00000*a_13*a_28-2.00000*a_12*a_29-2.00000*a_11*a_30-2.00000*a_10*a_31-2.00000*a_9*a_32-2.00000*a_8*a_33-2.00000*a_7*a_34-2.00000*a_6*a_35-2.00000*a_5*a_36-2.00000*a_4*a_37-2.00000*a_3*a_38-2.00000*a_2*a_39-2.00000*a_1*a_40)/(2.00000*a_0 - pow(2.0000000*z_0, 41.0));
complex<double>a_42 = (-d -2.00000*a_41*a_1-2.00000*a_40*a_2-2.00000*a_39*a_3-2.00000*a_38*a_4-2.00000*a_37*a_5-2.00000*a_36*a_6-2.00000*a_35*a_7-2.00000*a_34*a_8-2.00000*a_33*a_9-2.00000*a_32*a_10-2.00000*a_31*a_11-2.00000*a_30*a_12-2.00000*a_29*a_13-2.00000*a_28*a_14-2.00000*a_27*a_15-2.00000*a_26*a_16-2.00000*a_25*a_17-2.00000*a_24*a_18-2.00000*a_23*a_19-2.00000*a_22*a_20-a_21*a_21-2.00000*a_20*a_22-2.00000*a_19*a_23-2.00000*a_18*a_24-2.00000*a_17*a_25-2.00000*a_16*a_26-2.00000*a_15*a_27-2.00000*a_14*a_28-2.00000*a_13*a_29-2.00000*a_12*a_30-2.00000*a_11*a_31-2.00000*a_10*a_32-2.00000*a_9*a_33-2.00000*a_8*a_34-2.00000*a_7*a_35-2.00000*a_6*a_36-2.00000*a_5*a_37-2.00000*a_4*a_38-2.00000*a_3*a_39-2.00000*a_2*a_40-2.00000*a_1*a_41)/(2.00000*a_0 - pow(2.0000000*z_0, 42.0));
complex<double>a_43 = (-d -2.00000*a_42*a_1-2.00000*a_41*a_2-2.00000*a_40*a_3-2.00000*a_39*a_4-2.00000*a_38*a_5-2.00000*a_37*a_6-2.00000*a_36*a_7-2.00000*a_35*a_8-2.00000*a_34*a_9-2.00000*a_33*a_10-2.00000*a_32*a_11-2.00000*a_31*a_12-2.00000*a_30*a_13-2.00000*a_29*a_14-2.00000*a_28*a_15-2.00000*a_27*a_16-2.00000*a_26*a_17-2.00000*a_25*a_18-2.00000*a_24*a_19-2.00000*a_23*a_20-2.00000*a_22*a_21-2.00000*a_21*a_22-2.00000*a_20*a_23-2.00000*a_19*a_24-2.00000*a_18*a_25-2.00000*a_17*a_26-2.00000*a_16*a_27-2.00000*a_15*a_28-2.00000*a_14*a_29-2.00000*a_13*a_30-2.00000*a_12*a_31-2.00000*a_11*a_32-2.00000*a_10*a_33-2.00000*a_9*a_34-2.00000*a_8*a_35-2.00000*a_7*a_36-2.00000*a_6*a_37-2.00000*a_5*a_38-2.00000*a_4*a_39-2.00000*a_3*a_40-2.00000*a_2*a_41-2.00000*a_1*a_42)/(2.00000*a_0 - pow(2.0000000*z_0, 43.0));
complex<double>a_44 = (-d -2.00000*a_43*a_1-2.00000*a_42*a_2-2.00000*a_41*a_3-2.00000*a_40*a_4-2.00000*a_39*a_5-2.00000*a_38*a_6-2.00000*a_37*a_7-2.00000*a_36*a_8-2.00000*a_35*a_9-2.00000*a_34*a_10-2.00000*a_33*a_11-2.00000*a_32*a_12-2.00000*a_31*a_13-2.00000*a_30*a_14-2.00000*a_29*a_15-2.00000*a_28*a_16-2.00000*a_27*a_17-2.00000*a_26*a_18-2.00000*a_25*a_19-2.00000*a_24*a_20-2.00000*a_23*a_21-a_22*a_22-2.00000*a_21*a_23-2.00000*a_20*a_24-2.00000*a_19*a_25-2.00000*a_18*a_26-2.00000*a_17*a_27-2.00000*a_16*a_28-2.00000*a_15*a_29-2.00000*a_14*a_30-2.00000*a_13*a_31-2.00000*a_12*a_32-2.00000*a_11*a_33-2.00000*a_10*a_34-2.00000*a_9*a_35-2.00000*a_8*a_36-2.00000*a_7*a_37-2.00000*a_6*a_38-2.00000*a_5*a_39-2.00000*a_4*a_40-2.00000*a_3*a_41-2.00000*a_2*a_42-2.00000*a_1*a_43)/(2.00000*a_0 - pow(2.0000000*z_0, 44.0));
complex<double>a_45 = (-d -2.00000*a_44*a_1-2.00000*a_43*a_2-2.00000*a_42*a_3-2.00000*a_41*a_4-2.00000*a_40*a_5-2.00000*a_39*a_6-2.00000*a_38*a_7-2.00000*a_37*a_8-2.00000*a_36*a_9-2.00000*a_35*a_10-2.00000*a_34*a_11-2.00000*a_33*a_12-2.00000*a_32*a_13-2.00000*a_31*a_14-2.00000*a_30*a_15-2.00000*a_29*a_16-2.00000*a_28*a_17-2.00000*a_27*a_18-2.00000*a_26*a_19-2.00000*a_25*a_20-2.00000*a_24*a_21-2.00000*a_23*a_22-2.00000*a_22*a_23-2.00000*a_21*a_24-2.00000*a_20*a_25-2.00000*a_19*a_26-2.00000*a_18*a_27-2.00000*a_17*a_28-2.00000*a_16*a_29-2.00000*a_15*a_30-2.00000*a_14*a_31-2.00000*a_13*a_32-2.00000*a_12*a_33-2.00000*a_11*a_34-2.00000*a_10*a_35-2.00000*a_9*a_36-2.00000*a_8*a_37-2.00000*a_7*a_38-2.00000*a_6*a_39-2.00000*a_5*a_40-2.00000*a_4*a_41-2.00000*a_3*a_42-2.00000*a_2*a_43-2.00000*a_1*a_44)/(2.00000*a_0 - pow(2.0000000*z_0, 45.0));
complex<double>a_46 = (-d -2.00000*a_45*a_1-2.00000*a_44*a_2-2.00000*a_43*a_3-2.00000*a_42*a_4-2.00000*a_41*a_5-2.00000*a_40*a_6-2.00000*a_39*a_7-2.00000*a_38*a_8-2.00000*a_37*a_9-2.00000*a_36*a_10-2.00000*a_35*a_11-2.00000*a_34*a_12-2.00000*a_33*a_13-2.00000*a_32*a_14-2.00000*a_31*a_15-2.00000*a_30*a_16-2.00000*a_29*a_17-2.00000*a_28*a_18-2.00000*a_27*a_19-2.00000*a_26*a_20-2.00000*a_25*a_21-2.00000*a_24*a_22-a_23*a_23-2.00000*a_22*a_24-2.00000*a_21*a_25-2.00000*a_20*a_26-2.00000*a_19*a_27-2.00000*a_18*a_28-2.00000*a_17*a_29-2.00000*a_16*a_30-2.00000*a_15*a_31-2.00000*a_14*a_32-2.00000*a_13*a_33-2.00000*a_12*a_34-2.00000*a_11*a_35-2.00000*a_10*a_36-2.00000*a_9*a_37-2.00000*a_8*a_38-2.00000*a_7*a_39-2.00000*a_6*a_40-2.00000*a_5*a_41-2.00000*a_4*a_42-2.00000*a_3*a_43-2.00000*a_2*a_44-2.00000*a_1*a_45)/(2.00000*a_0 - pow(2.0000000*z_0, 46.0));
complex<double>a_47 = (-d -2.00000*a_46*a_1-2.00000*a_45*a_2-2.00000*a_44*a_3-2.00000*a_43*a_4-2.00000*a_42*a_5-2.00000*a_41*a_6-2.00000*a_40*a_7-2.00000*a_39*a_8-2.00000*a_38*a_9-2.00000*a_37*a_10-2.00000*a_36*a_11-2.00000*a_35*a_12-2.00000*a_34*a_13-2.00000*a_33*a_14-2.00000*a_32*a_15-2.00000*a_31*a_16-2.00000*a_30*a_17-2.00000*a_29*a_18-2.00000*a_28*a_19-2.00000*a_27*a_20-2.00000*a_26*a_21-2.00000*a_25*a_22-2.00000*a_24*a_23-2.00000*a_23*a_24-2.00000*a_22*a_25-2.00000*a_21*a_26-2.00000*a_20*a_27-2.00000*a_19*a_28-2.00000*a_18*a_29-2.00000*a_17*a_30-2.00000*a_16*a_31-2.00000*a_15*a_32-2.00000*a_14*a_33-2.00000*a_13*a_34-2.00000*a_12*a_35-2.00000*a_11*a_36-2.00000*a_10*a_37-2.00000*a_9*a_38-2.00000*a_8*a_39-2.00000*a_7*a_40-2.00000*a_6*a_41-2.00000*a_5*a_42-2.00000*a_4*a_43-2.00000*a_3*a_44-2.00000*a_2*a_45-2.00000*a_1*a_46)/(2.00000*a_0 - pow(2.0000000*z_0, 47.0));
complex<double>a_48 = (-d -2.00000*a_47*a_1-2.00000*a_46*a_2-2.00000*a_45*a_3-2.00000*a_44*a_4-2.00000*a_43*a_5-2.00000*a_42*a_6-2.00000*a_41*a_7-2.00000*a_40*a_8-2.00000*a_39*a_9-2.00000*a_38*a_10-2.00000*a_37*a_11-2.00000*a_36*a_12-2.00000*a_35*a_13-2.00000*a_34*a_14-2.00000*a_33*a_15-2.00000*a_32*a_16-2.00000*a_31*a_17-2.00000*a_30*a_18-2.00000*a_29*a_19-2.00000*a_28*a_20-2.00000*a_27*a_21-2.00000*a_26*a_22-2.00000*a_25*a_23-a_24*a_24-2.00000*a_23*a_25-2.00000*a_22*a_26-2.00000*a_21*a_27-2.00000*a_20*a_28-2.00000*a_19*a_29-2.00000*a_18*a_30-2.00000*a_17*a_31-2.00000*a_16*a_32-2.00000*a_15*a_33-2.00000*a_14*a_34-2.00000*a_13*a_35-2.00000*a_12*a_36-2.00000*a_11*a_37-2.00000*a_10*a_38-2.00000*a_9*a_39-2.00000*a_8*a_40-2.00000*a_7*a_41-2.00000*a_6*a_42-2.00000*a_5*a_43-2.00000*a_4*a_44-2.00000*a_3*a_45-2.00000*a_2*a_46-2.00000*a_1*a_47)/(2.00000*a_0 - pow(2.0000000*z_0, 48.0));
complex<double>a_49 = (-d -2.00000*a_48*a_1-2.00000*a_47*a_2-2.00000*a_46*a_3-2.00000*a_45*a_4-2.00000*a_44*a_5-2.00000*a_43*a_6-2.00000*a_42*a_7-2.00000*a_41*a_8-2.00000*a_40*a_9-2.00000*a_39*a_10-2.00000*a_38*a_11-2.00000*a_37*a_12-2.00000*a_36*a_13-2.00000*a_35*a_14-2.00000*a_34*a_15-2.00000*a_33*a_16-2.00000*a_32*a_17-2.00000*a_31*a_18-2.00000*a_30*a_19-2.00000*a_29*a_20-2.00000*a_28*a_21-2.00000*a_27*a_22-2.00000*a_26*a_23-2.00000*a_25*a_24-2.00000*a_24*a_25-2.00000*a_23*a_26-2.00000*a_22*a_27-2.00000*a_21*a_28-2.00000*a_20*a_29-2.00000*a_19*a_30-2.00000*a_18*a_31-2.00000*a_17*a_32-2.00000*a_16*a_33-2.00000*a_15*a_34-2.00000*a_14*a_35-2.00000*a_13*a_36-2.00000*a_12*a_37-2.00000*a_11*a_38-2.00000*a_10*a_39-2.00000*a_9*a_40-2.00000*a_8*a_41-2.00000*a_7*a_42-2.00000*a_6*a_43-2.00000*a_5*a_44-2.00000*a_4*a_45-2.00000*a_3*a_46-2.00000*a_2*a_47-2.00000*a_1*a_48)/(2.00000*a_0 - pow(2.0000000*z_0, 49.0));
complex<double>a_50 = (-d -2.00000*a_49*a_1-2.00000*a_48*a_2-2.00000*a_47*a_3-2.00000*a_46*a_4-2.00000*a_45*a_5-2.00000*a_44*a_6-2.00000*a_43*a_7-2.00000*a_42*a_8-2.00000*a_41*a_9-2.00000*a_40*a_10-2.00000*a_39*a_11-2.00000*a_38*a_12-2.00000*a_37*a_13-2.00000*a_36*a_14-2.00000*a_35*a_15-2.00000*a_34*a_16-2.00000*a_33*a_17-2.00000*a_32*a_18-2.00000*a_31*a_19-2.00000*a_30*a_20-2.00000*a_29*a_21-2.00000*a_28*a_22-2.00000*a_27*a_23-2.00000*a_26*a_24-a_25*a_25-2.00000*a_24*a_26-2.00000*a_23*a_27-2.00000*a_22*a_28-2.00000*a_21*a_29-2.00000*a_20*a_30-2.00000*a_19*a_31-2.00000*a_18*a_32-2.00000*a_17*a_33-2.00000*a_16*a_34-2.00000*a_15*a_35-2.00000*a_14*a_36-2.00000*a_13*a_37-2.00000*a_12*a_38-2.00000*a_11*a_39-2.00000*a_10*a_40-2.00000*a_9*a_41-2.00000*a_8*a_42-2.00000*a_7*a_43-2.00000*a_6*a_44-2.00000*a_5*a_45-2.00000*a_4*a_46-2.00000*a_3*a_47-2.00000*a_2*a_48-2.00000*a_1*a_49)/(2.00000*a_0 - pow(2.0000000*z_0, 50.0));
complex<double>a_51 = (-d -2.00000*a_50*a_1-2.00000*a_49*a_2-2.00000*a_48*a_3-2.00000*a_47*a_4-2.00000*a_46*a_5-2.00000*a_45*a_6-2.00000*a_44*a_7-2.00000*a_43*a_8-2.00000*a_42*a_9-2.00000*a_41*a_10-2.00000*a_40*a_11-2.00000*a_39*a_12-2.00000*a_38*a_13-2.00000*a_37*a_14-2.00000*a_36*a_15-2.00000*a_35*a_16-2.00000*a_34*a_17-2.00000*a_33*a_18-2.00000*a_32*a_19-2.00000*a_31*a_20-2.00000*a_30*a_21-2.00000*a_29*a_22-2.00000*a_28*a_23-2.00000*a_27*a_24-2.00000*a_26*a_25-2.00000*a_25*a_26-2.00000*a_24*a_27-2.00000*a_23*a_28-2.00000*a_22*a_29-2.00000*a_21*a_30-2.00000*a_20*a_31-2.00000*a_19*a_32-2.00000*a_18*a_33-2.00000*a_17*a_34-2.00000*a_16*a_35-2.00000*a_15*a_36-2.00000*a_14*a_37-2.00000*a_13*a_38-2.00000*a_12*a_39-2.00000*a_11*a_40-2.00000*a_10*a_41-2.00000*a_9*a_42-2.00000*a_8*a_43-2.00000*a_7*a_44-2.00000*a_6*a_45-2.00000*a_5*a_46-2.00000*a_4*a_47-2.00000*a_3*a_48-2.00000*a_2*a_49-2.00000*a_1*a_50)/(2.00000*a_0 - pow(2.0000000*z_0, 51.0));
complex<double>a_52 = (-d -2.00000*a_51*a_1-2.00000*a_50*a_2-2.00000*a_49*a_3-2.00000*a_48*a_4-2.00000*a_47*a_5-2.00000*a_46*a_6-2.00000*a_45*a_7-2.00000*a_44*a_8-2.00000*a_43*a_9-2.00000*a_42*a_10-2.00000*a_41*a_11-2.00000*a_40*a_12-2.00000*a_39*a_13-2.00000*a_38*a_14-2.00000*a_37*a_15-2.00000*a_36*a_16-2.00000*a_35*a_17-2.00000*a_34*a_18-2.00000*a_33*a_19-2.00000*a_32*a_20-2.00000*a_31*a_21-2.00000*a_30*a_22-2.00000*a_29*a_23-2.00000*a_28*a_24-2.00000*a_27*a_25-a_26*a_26-2.00000*a_25*a_27-2.00000*a_24*a_28-2.00000*a_23*a_29-2.00000*a_22*a_30-2.00000*a_21*a_31-2.00000*a_20*a_32-2.00000*a_19*a_33-2.00000*a_18*a_34-2.00000*a_17*a_35-2.00000*a_16*a_36-2.00000*a_15*a_37-2.00000*a_14*a_38-2.00000*a_13*a_39-2.00000*a_12*a_40-2.00000*a_11*a_41-2.00000*a_10*a_42-2.00000*a_9*a_43-2.00000*a_8*a_44-2.00000*a_7*a_45-2.00000*a_6*a_46-2.00000*a_5*a_47-2.00000*a_4*a_48-2.00000*a_3*a_49-2.00000*a_2*a_50-2.00000*a_1*a_51)/(2.00000*a_0 - pow(2.0000000*z_0, 52.0));
complex<double>a_53 = (-d -2.00000*a_52*a_1-2.00000*a_51*a_2-2.00000*a_50*a_3-2.00000*a_49*a_4-2.00000*a_48*a_5-2.00000*a_47*a_6-2.00000*a_46*a_7-2.00000*a_45*a_8-2.00000*a_44*a_9-2.00000*a_43*a_10-2.00000*a_42*a_11-2.00000*a_41*a_12-2.00000*a_40*a_13-2.00000*a_39*a_14-2.00000*a_38*a_15-2.00000*a_37*a_16-2.00000*a_36*a_17-2.00000*a_35*a_18-2.00000*a_34*a_19-2.00000*a_33*a_20-2.00000*a_32*a_21-2.00000*a_31*a_22-2.00000*a_30*a_23-2.00000*a_29*a_24-2.00000*a_28*a_25-2.00000*a_27*a_26-2.00000*a_26*a_27-2.00000*a_25*a_28-2.00000*a_24*a_29-2.00000*a_23*a_30-2.00000*a_22*a_31-2.00000*a_21*a_32-2.00000*a_20*a_33-2.00000*a_19*a_34-2.00000*a_18*a_35-2.00000*a_17*a_36-2.00000*a_16*a_37-2.00000*a_15*a_38-2.00000*a_14*a_39-2.00000*a_13*a_40-2.00000*a_12*a_41-2.00000*a_11*a_42-2.00000*a_10*a_43-2.00000*a_9*a_44-2.00000*a_8*a_45-2.00000*a_7*a_46-2.00000*a_6*a_47-2.00000*a_5*a_48-2.00000*a_4*a_49-2.00000*a_3*a_50-2.00000*a_2*a_51-2.00000*a_1*a_52)/(2.00000*a_0 - pow(2.0000000*z_0, 53.0));
complex<double>a_54 = (-d -2.00000*a_53*a_1-2.00000*a_52*a_2-2.00000*a_51*a_3-2.00000*a_50*a_4-2.00000*a_49*a_5-2.00000*a_48*a_6-2.00000*a_47*a_7-2.00000*a_46*a_8-2.00000*a_45*a_9-2.00000*a_44*a_10-2.00000*a_43*a_11-2.00000*a_42*a_12-2.00000*a_41*a_13-2.00000*a_40*a_14-2.00000*a_39*a_15-2.00000*a_38*a_16-2.00000*a_37*a_17-2.00000*a_36*a_18-2.00000*a_35*a_19-2.00000*a_34*a_20-2.00000*a_33*a_21-2.00000*a_32*a_22-2.00000*a_31*a_23-2.00000*a_30*a_24-2.00000*a_29*a_25-2.00000*a_28*a_26-a_27*a_27-2.00000*a_26*a_28-2.00000*a_25*a_29-2.00000*a_24*a_30-2.00000*a_23*a_31-2.00000*a_22*a_32-2.00000*a_21*a_33-2.00000*a_20*a_34-2.00000*a_19*a_35-2.00000*a_18*a_36-2.00000*a_17*a_37-2.00000*a_16*a_38-2.00000*a_15*a_39-2.00000*a_14*a_40-2.00000*a_13*a_41-2.00000*a_12*a_42-2.00000*a_11*a_43-2.00000*a_10*a_44-2.00000*a_9*a_45-2.00000*a_8*a_46-2.00000*a_7*a_47-2.00000*a_6*a_48-2.00000*a_5*a_49-2.00000*a_4*a_50-2.00000*a_3*a_51-2.00000*a_2*a_52-2.00000*a_1*a_53)/(2.00000*a_0 - pow(2.0000000*z_0, 54.0));
complex<double>a_55 = (-d -2.00000*a_54*a_1-2.00000*a_53*a_2-2.00000*a_52*a_3-2.00000*a_51*a_4-2.00000*a_50*a_5-2.00000*a_49*a_6-2.00000*a_48*a_7-2.00000*a_47*a_8-2.00000*a_46*a_9-2.00000*a_45*a_10-2.00000*a_44*a_11-2.00000*a_43*a_12-2.00000*a_42*a_13-2.00000*a_41*a_14-2.00000*a_40*a_15-2.00000*a_39*a_16-2.00000*a_38*a_17-2.00000*a_37*a_18-2.00000*a_36*a_19-2.00000*a_35*a_20-2.00000*a_34*a_21-2.00000*a_33*a_22-2.00000*a_32*a_23-2.00000*a_31*a_24-2.00000*a_30*a_25-2.00000*a_29*a_26-2.00000*a_28*a_27-2.00000*a_27*a_28-2.00000*a_26*a_29-2.00000*a_25*a_30-2.00000*a_24*a_31-2.00000*a_23*a_32-2.00000*a_22*a_33-2.00000*a_21*a_34-2.00000*a_20*a_35-2.00000*a_19*a_36-2.00000*a_18*a_37-2.00000*a_17*a_38-2.00000*a_16*a_39-2.00000*a_15*a_40-2.00000*a_14*a_41-2.00000*a_13*a_42-2.00000*a_12*a_43-2.00000*a_11*a_44-2.00000*a_10*a_45-2.00000*a_9*a_46-2.00000*a_8*a_47-2.00000*a_7*a_48-2.00000*a_6*a_49-2.00000*a_5*a_50-2.00000*a_4*a_51-2.00000*a_3*a_52-2.00000*a_2*a_53-2.00000*a_1*a_54)/(2.00000*a_0 - pow(2.0000000*z_0, 55.0));
complex<double>a_56 = (-d -2.00000*a_55*a_1-2.00000*a_54*a_2-2.00000*a_53*a_3-2.00000*a_52*a_4-2.00000*a_51*a_5-2.00000*a_50*a_6-2.00000*a_49*a_7-2.00000*a_48*a_8-2.00000*a_47*a_9-2.00000*a_46*a_10-2.00000*a_45*a_11-2.00000*a_44*a_12-2.00000*a_43*a_13-2.00000*a_42*a_14-2.00000*a_41*a_15-2.00000*a_40*a_16-2.00000*a_39*a_17-2.00000*a_38*a_18-2.00000*a_37*a_19-2.00000*a_36*a_20-2.00000*a_35*a_21-2.00000*a_34*a_22-2.00000*a_33*a_23-2.00000*a_32*a_24-2.00000*a_31*a_25-2.00000*a_30*a_26-2.00000*a_29*a_27-a_28*a_28-2.00000*a_27*a_29-2.00000*a_26*a_30-2.00000*a_25*a_31-2.00000*a_24*a_32-2.00000*a_23*a_33-2.00000*a_22*a_34-2.00000*a_21*a_35-2.00000*a_20*a_36-2.00000*a_19*a_37-2.00000*a_18*a_38-2.00000*a_17*a_39-2.00000*a_16*a_40-2.00000*a_15*a_41-2.00000*a_14*a_42-2.00000*a_13*a_43-2.00000*a_12*a_44-2.00000*a_11*a_45-2.00000*a_10*a_46-2.00000*a_9*a_47-2.00000*a_8*a_48-2.00000*a_7*a_49-2.00000*a_6*a_50-2.00000*a_5*a_51-2.00000*a_4*a_52-2.00000*a_3*a_53-2.00000*a_2*a_54-2.00000*a_1*a_55)/(2.00000*a_0 - pow(2.0000000*z_0, 56.0));
complex<double>a_57 = (-d -2.00000*a_56*a_1-2.00000*a_55*a_2-2.00000*a_54*a_3-2.00000*a_53*a_4-2.00000*a_52*a_5-2.00000*a_51*a_6-2.00000*a_50*a_7-2.00000*a_49*a_8-2.00000*a_48*a_9-2.00000*a_47*a_10-2.00000*a_46*a_11-2.00000*a_45*a_12-2.00000*a_44*a_13-2.00000*a_43*a_14-2.00000*a_42*a_15-2.00000*a_41*a_16-2.00000*a_40*a_17-2.00000*a_39*a_18-2.00000*a_38*a_19-2.00000*a_37*a_20-2.00000*a_36*a_21-2.00000*a_35*a_22-2.00000*a_34*a_23-2.00000*a_33*a_24-2.00000*a_32*a_25-2.00000*a_31*a_26-2.00000*a_30*a_27-2.00000*a_29*a_28-2.00000*a_28*a_29-2.00000*a_27*a_30-2.00000*a_26*a_31-2.00000*a_25*a_32-2.00000*a_24*a_33-2.00000*a_23*a_34-2.00000*a_22*a_35-2.00000*a_21*a_36-2.00000*a_20*a_37-2.00000*a_19*a_38-2.00000*a_18*a_39-2.00000*a_17*a_40-2.00000*a_16*a_41-2.00000*a_15*a_42-2.00000*a_14*a_43-2.00000*a_13*a_44-2.00000*a_12*a_45-2.00000*a_11*a_46-2.00000*a_10*a_47-2.00000*a_9*a_48-2.00000*a_8*a_49-2.00000*a_7*a_50-2.00000*a_6*a_51-2.00000*a_5*a_52-2.00000*a_4*a_53-2.00000*a_3*a_54-2.00000*a_2*a_55-2.00000*a_1*a_56)/(2.00000*a_0 - pow(2.0000000*z_0, 57.0));
complex<double>a_58 = (-d -2.00000*a_57*a_1-2.00000*a_56*a_2-2.00000*a_55*a_3-2.00000*a_54*a_4-2.00000*a_53*a_5-2.00000*a_52*a_6-2.00000*a_51*a_7-2.00000*a_50*a_8-2.00000*a_49*a_9-2.00000*a_48*a_10-2.00000*a_47*a_11-2.00000*a_46*a_12-2.00000*a_45*a_13-2.00000*a_44*a_14-2.00000*a_43*a_15-2.00000*a_42*a_16-2.00000*a_41*a_17-2.00000*a_40*a_18-2.00000*a_39*a_19-2.00000*a_38*a_20-2.00000*a_37*a_21-2.00000*a_36*a_22-2.00000*a_35*a_23-2.00000*a_34*a_24-2.00000*a_33*a_25-2.00000*a_32*a_26-2.00000*a_31*a_27-2.00000*a_30*a_28-a_29*a_29-2.00000*a_28*a_30-2.00000*a_27*a_31-2.00000*a_26*a_32-2.00000*a_25*a_33-2.00000*a_24*a_34-2.00000*a_23*a_35-2.00000*a_22*a_36-2.00000*a_21*a_37-2.00000*a_20*a_38-2.00000*a_19*a_39-2.00000*a_18*a_40-2.00000*a_17*a_41-2.00000*a_16*a_42-2.00000*a_15*a_43-2.00000*a_14*a_44-2.00000*a_13*a_45-2.00000*a_12*a_46-2.00000*a_11*a_47-2.00000*a_10*a_48-2.00000*a_9*a_49-2.00000*a_8*a_50-2.00000*a_7*a_51-2.00000*a_6*a_52-2.00000*a_5*a_53-2.00000*a_4*a_54-2.00000*a_3*a_55-2.00000*a_2*a_56-2.00000*a_1*a_57)/(2.00000*a_0 - pow(2.0000000*z_0, 58.0));
complex<double>a_59 = (-d -2.00000*a_58*a_1-2.00000*a_57*a_2-2.00000*a_56*a_3-2.00000*a_55*a_4-2.00000*a_54*a_5-2.00000*a_53*a_6-2.00000*a_52*a_7-2.00000*a_51*a_8-2.00000*a_50*a_9-2.00000*a_49*a_10-2.00000*a_48*a_11-2.00000*a_47*a_12-2.00000*a_46*a_13-2.00000*a_45*a_14-2.00000*a_44*a_15-2.00000*a_43*a_16-2.00000*a_42*a_17-2.00000*a_41*a_18-2.00000*a_40*a_19-2.00000*a_39*a_20-2.00000*a_38*a_21-2.00000*a_37*a_22-2.00000*a_36*a_23-2.00000*a_35*a_24-2.00000*a_34*a_25-2.00000*a_33*a_26-2.00000*a_32*a_27-2.00000*a_31*a_28-2.00000*a_30*a_29-2.00000*a_29*a_30-2.00000*a_28*a_31-2.00000*a_27*a_32-2.00000*a_26*a_33-2.00000*a_25*a_34-2.00000*a_24*a_35-2.00000*a_23*a_36-2.00000*a_22*a_37-2.00000*a_21*a_38-2.00000*a_20*a_39-2.00000*a_19*a_40-2.00000*a_18*a_41-2.00000*a_17*a_42-2.00000*a_16*a_43-2.00000*a_15*a_44-2.00000*a_14*a_45-2.00000*a_13*a_46-2.00000*a_12*a_47-2.00000*a_11*a_48-2.00000*a_10*a_49-2.00000*a_9*a_50-2.00000*a_8*a_51-2.00000*a_7*a_52-2.00000*a_6*a_53-2.00000*a_5*a_54-2.00000*a_4*a_55-2.00000*a_3*a_56-2.00000*a_2*a_57-2.00000*a_1*a_58)/(2.00000*a_0 - pow(2.0000000*z_0, 59.0));
complex<double>a_60 = (-d -2.00000*a_59*a_1-2.00000*a_58*a_2-2.00000*a_57*a_3-2.00000*a_56*a_4-2.00000*a_55*a_5-2.00000*a_54*a_6-2.00000*a_53*a_7-2.00000*a_52*a_8-2.00000*a_51*a_9-2.00000*a_50*a_10-2.00000*a_49*a_11-2.00000*a_48*a_12-2.00000*a_47*a_13-2.00000*a_46*a_14-2.00000*a_45*a_15-2.00000*a_44*a_16-2.00000*a_43*a_17-2.00000*a_42*a_18-2.00000*a_41*a_19-2.00000*a_40*a_20-2.00000*a_39*a_21-2.00000*a_38*a_22-2.00000*a_37*a_23-2.00000*a_36*a_24-2.00000*a_35*a_25-2.00000*a_34*a_26-2.00000*a_33*a_27-2.00000*a_32*a_28-2.00000*a_31*a_29-a_30*a_30-2.00000*a_29*a_31-2.00000*a_28*a_32-2.00000*a_27*a_33-2.00000*a_26*a_34-2.00000*a_25*a_35-2.00000*a_24*a_36-2.00000*a_23*a_37-2.00000*a_22*a_38-2.00000*a_21*a_39-2.00000*a_20*a_40-2.00000*a_19*a_41-2.00000*a_18*a_42-2.00000*a_17*a_43-2.00000*a_16*a_44-2.00000*a_15*a_45-2.00000*a_14*a_46-2.00000*a_13*a_47-2.00000*a_12*a_48-2.00000*a_11*a_49-2.00000*a_10*a_50-2.00000*a_9*a_51-2.00000*a_8*a_52-2.00000*a_7*a_53-2.00000*a_6*a_54-2.00000*a_5*a_55-2.00000*a_4*a_56-2.00000*a_3*a_57-2.00000*a_2*a_58-2.00000*a_1*a_59)/(2.00000*a_0 - pow(2.0000000*z_0, 60.0));
complex<double>a_61 = (-d -2.00000*a_60*a_1-2.00000*a_59*a_2-2.00000*a_58*a_3-2.00000*a_57*a_4-2.00000*a_56*a_5-2.00000*a_55*a_6-2.00000*a_54*a_7-2.00000*a_53*a_8-2.00000*a_52*a_9-2.00000*a_51*a_10-2.00000*a_50*a_11-2.00000*a_49*a_12-2.00000*a_48*a_13-2.00000*a_47*a_14-2.00000*a_46*a_15-2.00000*a_45*a_16-2.00000*a_44*a_17-2.00000*a_43*a_18-2.00000*a_42*a_19-2.00000*a_41*a_20-2.00000*a_40*a_21-2.00000*a_39*a_22-2.00000*a_38*a_23-2.00000*a_37*a_24-2.00000*a_36*a_25-2.00000*a_35*a_26-2.00000*a_34*a_27-2.00000*a_33*a_28-2.00000*a_32*a_29-2.00000*a_31*a_30-2.00000*a_30*a_31-2.00000*a_29*a_32-2.00000*a_28*a_33-2.00000*a_27*a_34-2.00000*a_26*a_35-2.00000*a_25*a_36-2.00000*a_24*a_37-2.00000*a_23*a_38-2.00000*a_22*a_39-2.00000*a_21*a_40-2.00000*a_20*a_41-2.00000*a_19*a_42-2.00000*a_18*a_43-2.00000*a_17*a_44-2.00000*a_16*a_45-2.00000*a_15*a_46-2.00000*a_14*a_47-2.00000*a_13*a_48-2.00000*a_12*a_49-2.00000*a_11*a_50-2.00000*a_10*a_51-2.00000*a_9*a_52-2.00000*a_8*a_53-2.00000*a_7*a_54-2.00000*a_6*a_55-2.00000*a_5*a_56-2.00000*a_4*a_57-2.00000*a_3*a_58-2.00000*a_2*a_59-2.00000*a_1*a_60)/(2.00000*a_0 - pow(2.0000000*z_0, 61.0));
complex<double>a_62 = (-d -2.00000*a_61*a_1-2.00000*a_60*a_2-2.00000*a_59*a_3-2.00000*a_58*a_4-2.00000*a_57*a_5-2.00000*a_56*a_6-2.00000*a_55*a_7-2.00000*a_54*a_8-2.00000*a_53*a_9-2.00000*a_52*a_10-2.00000*a_51*a_11-2.00000*a_50*a_12-2.00000*a_49*a_13-2.00000*a_48*a_14-2.00000*a_47*a_15-2.00000*a_46*a_16-2.00000*a_45*a_17-2.00000*a_44*a_18-2.00000*a_43*a_19-2.00000*a_42*a_20-2.00000*a_41*a_21-2.00000*a_40*a_22-2.00000*a_39*a_23-2.00000*a_38*a_24-2.00000*a_37*a_25-2.00000*a_36*a_26-2.00000*a_35*a_27-2.00000*a_34*a_28-2.00000*a_33*a_29-2.00000*a_32*a_30-a_31*a_31-2.00000*a_30*a_32-2.00000*a_29*a_33-2.00000*a_28*a_34-2.00000*a_27*a_35-2.00000*a_26*a_36-2.00000*a_25*a_37-2.00000*a_24*a_38-2.00000*a_23*a_39-2.00000*a_22*a_40-2.00000*a_21*a_41-2.00000*a_20*a_42-2.00000*a_19*a_43-2.00000*a_18*a_44-2.00000*a_17*a_45-2.00000*a_16*a_46-2.00000*a_15*a_47-2.00000*a_14*a_48-2.00000*a_13*a_49-2.00000*a_12*a_50-2.00000*a_11*a_51-2.00000*a_10*a_52-2.00000*a_9*a_53-2.00000*a_8*a_54-2.00000*a_7*a_55-2.00000*a_6*a_56-2.00000*a_5*a_57-2.00000*a_4*a_58-2.00000*a_3*a_59-2.00000*a_2*a_60-2.00000*a_1*a_61)/(2.00000*a_0 - pow(2.0000000*z_0, 62.0));
complex<double>a_63 = (-d -2.00000*a_62*a_1-2.00000*a_61*a_2-2.00000*a_60*a_3-2.00000*a_59*a_4-2.00000*a_58*a_5-2.00000*a_57*a_6-2.00000*a_56*a_7-2.00000*a_55*a_8-2.00000*a_54*a_9-2.00000*a_53*a_10-2.00000*a_52*a_11-2.00000*a_51*a_12-2.00000*a_50*a_13-2.00000*a_49*a_14-2.00000*a_48*a_15-2.00000*a_47*a_16-2.00000*a_46*a_17-2.00000*a_45*a_18-2.00000*a_44*a_19-2.00000*a_43*a_20-2.00000*a_42*a_21-2.00000*a_41*a_22-2.00000*a_40*a_23-2.00000*a_39*a_24-2.00000*a_38*a_25-2.00000*a_37*a_26-2.00000*a_36*a_27-2.00000*a_35*a_28-2.00000*a_34*a_29-2.00000*a_33*a_30-2.00000*a_32*a_31-2.00000*a_31*a_32-2.00000*a_30*a_33-2.00000*a_29*a_34-2.00000*a_28*a_35-2.00000*a_27*a_36-2.00000*a_26*a_37-2.00000*a_25*a_38-2.00000*a_24*a_39-2.00000*a_23*a_40-2.00000*a_22*a_41-2.00000*a_21*a_42-2.00000*a_20*a_43-2.00000*a_19*a_44-2.00000*a_18*a_45-2.00000*a_17*a_46-2.00000*a_16*a_47-2.00000*a_15*a_48-2.00000*a_14*a_49-2.00000*a_13*a_50-2.00000*a_12*a_51-2.00000*a_11*a_52-2.00000*a_10*a_53-2.00000*a_9*a_54-2.00000*a_8*a_55-2.00000*a_7*a_56-2.00000*a_6*a_57-2.00000*a_5*a_58-2.00000*a_4*a_59-2.00000*a_3*a_60-2.00000*a_2*a_61-2.00000*a_1*a_62)/(2.00000*a_0 - pow(2.0000000*z_0, 63.0));
complex<double>a_64 = (-d -2.00000*a_63*a_1-2.00000*a_62*a_2-2.00000*a_61*a_3-2.00000*a_60*a_4-2.00000*a_59*a_5-2.00000*a_58*a_6-2.00000*a_57*a_7-2.00000*a_56*a_8-2.00000*a_55*a_9-2.00000*a_54*a_10-2.00000*a_53*a_11-2.00000*a_52*a_12-2.00000*a_51*a_13-2.00000*a_50*a_14-2.00000*a_49*a_15-2.00000*a_48*a_16-2.00000*a_47*a_17-2.00000*a_46*a_18-2.00000*a_45*a_19-2.00000*a_44*a_20-2.00000*a_43*a_21-2.00000*a_42*a_22-2.00000*a_41*a_23-2.00000*a_40*a_24-2.00000*a_39*a_25-2.00000*a_38*a_26-2.00000*a_37*a_27-2.00000*a_36*a_28-2.00000*a_35*a_29-2.00000*a_34*a_30-2.00000*a_33*a_31-a_32*a_32-2.00000*a_31*a_33-2.00000*a_30*a_34-2.00000*a_29*a_35-2.00000*a_28*a_36-2.00000*a_27*a_37-2.00000*a_26*a_38-2.00000*a_25*a_39-2.00000*a_24*a_40-2.00000*a_23*a_41-2.00000*a_22*a_42-2.00000*a_21*a_43-2.00000*a_20*a_44-2.00000*a_19*a_45-2.00000*a_18*a_46-2.00000*a_17*a_47-2.00000*a_16*a_48-2.00000*a_15*a_49-2.00000*a_14*a_50-2.00000*a_13*a_51-2.00000*a_12*a_52-2.00000*a_11*a_53-2.00000*a_10*a_54-2.00000*a_9*a_55-2.00000*a_8*a_56-2.00000*a_7*a_57-2.00000*a_6*a_58-2.00000*a_5*a_59-2.00000*a_4*a_60-2.00000*a_3*a_61-2.00000*a_2*a_62-2.00000*a_1*a_63)/(2.00000*a_0 - pow(2.0000000*z_0, 64.0));
complex<double>a_65 = (-d -2.00000*a_64*a_1-2.00000*a_63*a_2-2.00000*a_62*a_3-2.00000*a_61*a_4-2.00000*a_60*a_5-2.00000*a_59*a_6-2.00000*a_58*a_7-2.00000*a_57*a_8-2.00000*a_56*a_9-2.00000*a_55*a_10-2.00000*a_54*a_11-2.00000*a_53*a_12-2.00000*a_52*a_13-2.00000*a_51*a_14-2.00000*a_50*a_15-2.00000*a_49*a_16-2.00000*a_48*a_17-2.00000*a_47*a_18-2.00000*a_46*a_19-2.00000*a_45*a_20-2.00000*a_44*a_21-2.00000*a_43*a_22-2.00000*a_42*a_23-2.00000*a_41*a_24-2.00000*a_40*a_25-2.00000*a_39*a_26-2.00000*a_38*a_27-2.00000*a_37*a_28-2.00000*a_36*a_29-2.00000*a_35*a_30-2.00000*a_34*a_31-2.00000*a_33*a_32-2.00000*a_32*a_33-2.00000*a_31*a_34-2.00000*a_30*a_35-2.00000*a_29*a_36-2.00000*a_28*a_37-2.00000*a_27*a_38-2.00000*a_26*a_39-2.00000*a_25*a_40-2.00000*a_24*a_41-2.00000*a_23*a_42-2.00000*a_22*a_43-2.00000*a_21*a_44-2.00000*a_20*a_45-2.00000*a_19*a_46-2.00000*a_18*a_47-2.00000*a_17*a_48-2.00000*a_16*a_49-2.00000*a_15*a_50-2.00000*a_14*a_51-2.00000*a_13*a_52-2.00000*a_12*a_53-2.00000*a_11*a_54-2.00000*a_10*a_55-2.00000*a_9*a_56-2.00000*a_8*a_57-2.00000*a_7*a_58-2.00000*a_6*a_59-2.00000*a_5*a_60-2.00000*a_4*a_61-2.00000*a_3*a_62-2.00000*a_2*a_63-2.00000*a_1*a_64)/(2.00000*a_0 - pow(2.0000000*z_0, 65.0));
complex<double>a_66 = (-d -2.00000*a_65*a_1-2.00000*a_64*a_2-2.00000*a_63*a_3-2.00000*a_62*a_4-2.00000*a_61*a_5-2.00000*a_60*a_6-2.00000*a_59*a_7-2.00000*a_58*a_8-2.00000*a_57*a_9-2.00000*a_56*a_10-2.00000*a_55*a_11-2.00000*a_54*a_12-2.00000*a_53*a_13-2.00000*a_52*a_14-2.00000*a_51*a_15-2.00000*a_50*a_16-2.00000*a_49*a_17-2.00000*a_48*a_18-2.00000*a_47*a_19-2.00000*a_46*a_20-2.00000*a_45*a_21-2.00000*a_44*a_22-2.00000*a_43*a_23-2.00000*a_42*a_24-2.00000*a_41*a_25-2.00000*a_40*a_26-2.00000*a_39*a_27-2.00000*a_38*a_28-2.00000*a_37*a_29-2.00000*a_36*a_30-2.00000*a_35*a_31-2.00000*a_34*a_32-a_33*a_33-2.00000*a_32*a_34-2.00000*a_31*a_35-2.00000*a_30*a_36-2.00000*a_29*a_37-2.00000*a_28*a_38-2.00000*a_27*a_39-2.00000*a_26*a_40-2.00000*a_25*a_41-2.00000*a_24*a_42-2.00000*a_23*a_43-2.00000*a_22*a_44-2.00000*a_21*a_45-2.00000*a_20*a_46-2.00000*a_19*a_47-2.00000*a_18*a_48-2.00000*a_17*a_49-2.00000*a_16*a_50-2.00000*a_15*a_51-2.00000*a_14*a_52-2.00000*a_13*a_53-2.00000*a_12*a_54-2.00000*a_11*a_55-2.00000*a_10*a_56-2.00000*a_9*a_57-2.00000*a_8*a_58-2.00000*a_7*a_59-2.00000*a_6*a_60-2.00000*a_5*a_61-2.00000*a_4*a_62-2.00000*a_3*a_63-2.00000*a_2*a_64-2.00000*a_1*a_65)/(2.00000*a_0 - pow(2.0000000*z_0, 66.0));
complex<double>a_67 = (-d -2.00000*a_66*a_1-2.00000*a_65*a_2-2.00000*a_64*a_3-2.00000*a_63*a_4-2.00000*a_62*a_5-2.00000*a_61*a_6-2.00000*a_60*a_7-2.00000*a_59*a_8-2.00000*a_58*a_9-2.00000*a_57*a_10-2.00000*a_56*a_11-2.00000*a_55*a_12-2.00000*a_54*a_13-2.00000*a_53*a_14-2.00000*a_52*a_15-2.00000*a_51*a_16-2.00000*a_50*a_17-2.00000*a_49*a_18-2.00000*a_48*a_19-2.00000*a_47*a_20-2.00000*a_46*a_21-2.00000*a_45*a_22-2.00000*a_44*a_23-2.00000*a_43*a_24-2.00000*a_42*a_25-2.00000*a_41*a_26-2.00000*a_40*a_27-2.00000*a_39*a_28-2.00000*a_38*a_29-2.00000*a_37*a_30-2.00000*a_36*a_31-2.00000*a_35*a_32-2.00000*a_34*a_33-2.00000*a_33*a_34-2.00000*a_32*a_35-2.00000*a_31*a_36-2.00000*a_30*a_37-2.00000*a_29*a_38-2.00000*a_28*a_39-2.00000*a_27*a_40-2.00000*a_26*a_41-2.00000*a_25*a_42-2.00000*a_24*a_43-2.00000*a_23*a_44-2.00000*a_22*a_45-2.00000*a_21*a_46-2.00000*a_20*a_47-2.00000*a_19*a_48-2.00000*a_18*a_49-2.00000*a_17*a_50-2.00000*a_16*a_51-2.00000*a_15*a_52-2.00000*a_14*a_53-2.00000*a_13*a_54-2.00000*a_12*a_55-2.00000*a_11*a_56-2.00000*a_10*a_57-2.00000*a_9*a_58-2.00000*a_8*a_59-2.00000*a_7*a_60-2.00000*a_6*a_61-2.00000*a_5*a_62-2.00000*a_4*a_63-2.00000*a_3*a_64-2.00000*a_2*a_65-2.00000*a_1*a_66)/(2.00000*a_0 - pow(2.0000000*z_0, 67.0));
complex<double>a_68 = (-d -2.00000*a_67*a_1-2.00000*a_66*a_2-2.00000*a_65*a_3-2.00000*a_64*a_4-2.00000*a_63*a_5-2.00000*a_62*a_6-2.00000*a_61*a_7-2.00000*a_60*a_8-2.00000*a_59*a_9-2.00000*a_58*a_10-2.00000*a_57*a_11-2.00000*a_56*a_12-2.00000*a_55*a_13-2.00000*a_54*a_14-2.00000*a_53*a_15-2.00000*a_52*a_16-2.00000*a_51*a_17-2.00000*a_50*a_18-2.00000*a_49*a_19-2.00000*a_48*a_20-2.00000*a_47*a_21-2.00000*a_46*a_22-2.00000*a_45*a_23-2.00000*a_44*a_24-2.00000*a_43*a_25-2.00000*a_42*a_26-2.00000*a_41*a_27-2.00000*a_40*a_28-2.00000*a_39*a_29-2.00000*a_38*a_30-2.00000*a_37*a_31-2.00000*a_36*a_32-2.00000*a_35*a_33-a_34*a_34-2.00000*a_33*a_35-2.00000*a_32*a_36-2.00000*a_31*a_37-2.00000*a_30*a_38-2.00000*a_29*a_39-2.00000*a_28*a_40-2.00000*a_27*a_41-2.00000*a_26*a_42-2.00000*a_25*a_43-2.00000*a_24*a_44-2.00000*a_23*a_45-2.00000*a_22*a_46-2.00000*a_21*a_47-2.00000*a_20*a_48-2.00000*a_19*a_49-2.00000*a_18*a_50-2.00000*a_17*a_51-2.00000*a_16*a_52-2.00000*a_15*a_53-2.00000*a_14*a_54-2.00000*a_13*a_55-2.00000*a_12*a_56-2.00000*a_11*a_57-2.00000*a_10*a_58-2.00000*a_9*a_59-2.00000*a_8*a_60-2.00000*a_7*a_61-2.00000*a_6*a_62-2.00000*a_5*a_63-2.00000*a_4*a_64-2.00000*a_3*a_65-2.00000*a_2*a_66-2.00000*a_1*a_67)/(2.00000*a_0 - pow(2.0000000*z_0, 68.0));
complex<double>a_69 = (-d -2.00000*a_68*a_1-2.00000*a_67*a_2-2.00000*a_66*a_3-2.00000*a_65*a_4-2.00000*a_64*a_5-2.00000*a_63*a_6-2.00000*a_62*a_7-2.00000*a_61*a_8-2.00000*a_60*a_9-2.00000*a_59*a_10-2.00000*a_58*a_11-2.00000*a_57*a_12-2.00000*a_56*a_13-2.00000*a_55*a_14-2.00000*a_54*a_15-2.00000*a_53*a_16-2.00000*a_52*a_17-2.00000*a_51*a_18-2.00000*a_50*a_19-2.00000*a_49*a_20-2.00000*a_48*a_21-2.00000*a_47*a_22-2.00000*a_46*a_23-2.00000*a_45*a_24-2.00000*a_44*a_25-2.00000*a_43*a_26-2.00000*a_42*a_27-2.00000*a_41*a_28-2.00000*a_40*a_29-2.00000*a_39*a_30-2.00000*a_38*a_31-2.00000*a_37*a_32-2.00000*a_36*a_33-2.00000*a_35*a_34-2.00000*a_34*a_35-2.00000*a_33*a_36-2.00000*a_32*a_37-2.00000*a_31*a_38-2.00000*a_30*a_39-2.00000*a_29*a_40-2.00000*a_28*a_41-2.00000*a_27*a_42-2.00000*a_26*a_43-2.00000*a_25*a_44-2.00000*a_24*a_45-2.00000*a_23*a_46-2.00000*a_22*a_47-2.00000*a_21*a_48-2.00000*a_20*a_49-2.00000*a_19*a_50-2.00000*a_18*a_51-2.00000*a_17*a_52-2.00000*a_16*a_53-2.00000*a_15*a_54-2.00000*a_14*a_55-2.00000*a_13*a_56-2.00000*a_12*a_57-2.00000*a_11*a_58-2.00000*a_10*a_59-2.00000*a_9*a_60-2.00000*a_8*a_61-2.00000*a_7*a_62-2.00000*a_6*a_63-2.00000*a_5*a_64-2.00000*a_4*a_65-2.00000*a_3*a_66-2.00000*a_2*a_67-2.00000*a_1*a_68)/(2.00000*a_0 - pow(2.0000000*z_0, 69.0));
complex<double>a_70 = (-d -2.00000*a_69*a_1-2.00000*a_68*a_2-2.00000*a_67*a_3-2.00000*a_66*a_4-2.00000*a_65*a_5-2.00000*a_64*a_6-2.00000*a_63*a_7-2.00000*a_62*a_8-2.00000*a_61*a_9-2.00000*a_60*a_10-2.00000*a_59*a_11-2.00000*a_58*a_12-2.00000*a_57*a_13-2.00000*a_56*a_14-2.00000*a_55*a_15-2.00000*a_54*a_16-2.00000*a_53*a_17-2.00000*a_52*a_18-2.00000*a_51*a_19-2.00000*a_50*a_20-2.00000*a_49*a_21-2.00000*a_48*a_22-2.00000*a_47*a_23-2.00000*a_46*a_24-2.00000*a_45*a_25-2.00000*a_44*a_26-2.00000*a_43*a_27-2.00000*a_42*a_28-2.00000*a_41*a_29-2.00000*a_40*a_30-2.00000*a_39*a_31-2.00000*a_38*a_32-2.00000*a_37*a_33-2.00000*a_36*a_34-a_35*a_35-2.00000*a_34*a_36-2.00000*a_33*a_37-2.00000*a_32*a_38-2.00000*a_31*a_39-2.00000*a_30*a_40-2.00000*a_29*a_41-2.00000*a_28*a_42-2.00000*a_27*a_43-2.00000*a_26*a_44-2.00000*a_25*a_45-2.00000*a_24*a_46-2.00000*a_23*a_47-2.00000*a_22*a_48-2.00000*a_21*a_49-2.00000*a_20*a_50-2.00000*a_19*a_51-2.00000*a_18*a_52-2.00000*a_17*a_53-2.00000*a_16*a_54-2.00000*a_15*a_55-2.00000*a_14*a_56-2.00000*a_13*a_57-2.00000*a_12*a_58-2.00000*a_11*a_59-2.00000*a_10*a_60-2.00000*a_9*a_61-2.00000*a_8*a_62-2.00000*a_7*a_63-2.00000*a_6*a_64-2.00000*a_5*a_65-2.00000*a_4*a_66-2.00000*a_3*a_67-2.00000*a_2*a_68-2.00000*a_1*a_69)/(2.00000*a_0 - pow(2.0000000*z_0, 70.0));
complex<double>a_71 = (-d -2.00000*a_70*a_1-2.00000*a_69*a_2-2.00000*a_68*a_3-2.00000*a_67*a_4-2.00000*a_66*a_5-2.00000*a_65*a_6-2.00000*a_64*a_7-2.00000*a_63*a_8-2.00000*a_62*a_9-2.00000*a_61*a_10-2.00000*a_60*a_11-2.00000*a_59*a_12-2.00000*a_58*a_13-2.00000*a_57*a_14-2.00000*a_56*a_15-2.00000*a_55*a_16-2.00000*a_54*a_17-2.00000*a_53*a_18-2.00000*a_52*a_19-2.00000*a_51*a_20-2.00000*a_50*a_21-2.00000*a_49*a_22-2.00000*a_48*a_23-2.00000*a_47*a_24-2.00000*a_46*a_25-2.00000*a_45*a_26-2.00000*a_44*a_27-2.00000*a_43*a_28-2.00000*a_42*a_29-2.00000*a_41*a_30-2.00000*a_40*a_31-2.00000*a_39*a_32-2.00000*a_38*a_33-2.00000*a_37*a_34-2.00000*a_36*a_35-2.00000*a_35*a_36-2.00000*a_34*a_37-2.00000*a_33*a_38-2.00000*a_32*a_39-2.00000*a_31*a_40-2.00000*a_30*a_41-2.00000*a_29*a_42-2.00000*a_28*a_43-2.00000*a_27*a_44-2.00000*a_26*a_45-2.00000*a_25*a_46-2.00000*a_24*a_47-2.00000*a_23*a_48-2.00000*a_22*a_49-2.00000*a_21*a_50-2.00000*a_20*a_51-2.00000*a_19*a_52-2.00000*a_18*a_53-2.00000*a_17*a_54-2.00000*a_16*a_55-2.00000*a_15*a_56-2.00000*a_14*a_57-2.00000*a_13*a_58-2.00000*a_12*a_59-2.00000*a_11*a_60-2.00000*a_10*a_61-2.00000*a_9*a_62-2.00000*a_8*a_63-2.00000*a_7*a_64-2.00000*a_6*a_65-2.00000*a_5*a_66-2.00000*a_4*a_67-2.00000*a_3*a_68-2.00000*a_2*a_69-2.00000*a_1*a_70)/(2.00000*a_0 - pow(2.0000000*z_0, 71.0));
complex<double>a_72 = (-d -2.00000*a_71*a_1-2.00000*a_70*a_2-2.00000*a_69*a_3-2.00000*a_68*a_4-2.00000*a_67*a_5-2.00000*a_66*a_6-2.00000*a_65*a_7-2.00000*a_64*a_8-2.00000*a_63*a_9-2.00000*a_62*a_10-2.00000*a_61*a_11-2.00000*a_60*a_12-2.00000*a_59*a_13-2.00000*a_58*a_14-2.00000*a_57*a_15-2.00000*a_56*a_16-2.00000*a_55*a_17-2.00000*a_54*a_18-2.00000*a_53*a_19-2.00000*a_52*a_20-2.00000*a_51*a_21-2.00000*a_50*a_22-2.00000*a_49*a_23-2.00000*a_48*a_24-2.00000*a_47*a_25-2.00000*a_46*a_26-2.00000*a_45*a_27-2.00000*a_44*a_28-2.00000*a_43*a_29-2.00000*a_42*a_30-2.00000*a_41*a_31-2.00000*a_40*a_32-2.00000*a_39*a_33-2.00000*a_38*a_34-2.00000*a_37*a_35-a_36*a_36-2.00000*a_35*a_37-2.00000*a_34*a_38-2.00000*a_33*a_39-2.00000*a_32*a_40-2.00000*a_31*a_41-2.00000*a_30*a_42-2.00000*a_29*a_43-2.00000*a_28*a_44-2.00000*a_27*a_45-2.00000*a_26*a_46-2.00000*a_25*a_47-2.00000*a_24*a_48-2.00000*a_23*a_49-2.00000*a_22*a_50-2.00000*a_21*a_51-2.00000*a_20*a_52-2.00000*a_19*a_53-2.00000*a_18*a_54-2.00000*a_17*a_55-2.00000*a_16*a_56-2.00000*a_15*a_57-2.00000*a_14*a_58-2.00000*a_13*a_59-2.00000*a_12*a_60-2.00000*a_11*a_61-2.00000*a_10*a_62-2.00000*a_9*a_63-2.00000*a_8*a_64-2.00000*a_7*a_65-2.00000*a_6*a_66-2.00000*a_5*a_67-2.00000*a_4*a_68-2.00000*a_3*a_69-2.00000*a_2*a_70-2.00000*a_1*a_71)/(2.00000*a_0 - pow(2.0000000*z_0, 72.0));
complex<double>a_73 = (-d -2.00000*a_72*a_1-2.00000*a_71*a_2-2.00000*a_70*a_3-2.00000*a_69*a_4-2.00000*a_68*a_5-2.00000*a_67*a_6-2.00000*a_66*a_7-2.00000*a_65*a_8-2.00000*a_64*a_9-2.00000*a_63*a_10-2.00000*a_62*a_11-2.00000*a_61*a_12-2.00000*a_60*a_13-2.00000*a_59*a_14-2.00000*a_58*a_15-2.00000*a_57*a_16-2.00000*a_56*a_17-2.00000*a_55*a_18-2.00000*a_54*a_19-2.00000*a_53*a_20-2.00000*a_52*a_21-2.00000*a_51*a_22-2.00000*a_50*a_23-2.00000*a_49*a_24-2.00000*a_48*a_25-2.00000*a_47*a_26-2.00000*a_46*a_27-2.00000*a_45*a_28-2.00000*a_44*a_29-2.00000*a_43*a_30-2.00000*a_42*a_31-2.00000*a_41*a_32-2.00000*a_40*a_33-2.00000*a_39*a_34-2.00000*a_38*a_35-2.00000*a_37*a_36-2.00000*a_36*a_37-2.00000*a_35*a_38-2.00000*a_34*a_39-2.00000*a_33*a_40-2.00000*a_32*a_41-2.00000*a_31*a_42-2.00000*a_30*a_43-2.00000*a_29*a_44-2.00000*a_28*a_45-2.00000*a_27*a_46-2.00000*a_26*a_47-2.00000*a_25*a_48-2.00000*a_24*a_49-2.00000*a_23*a_50-2.00000*a_22*a_51-2.00000*a_21*a_52-2.00000*a_20*a_53-2.00000*a_19*a_54-2.00000*a_18*a_55-2.00000*a_17*a_56-2.00000*a_16*a_57-2.00000*a_15*a_58-2.00000*a_14*a_59-2.00000*a_13*a_60-2.00000*a_12*a_61-2.00000*a_11*a_62-2.00000*a_10*a_63-2.00000*a_9*a_64-2.00000*a_8*a_65-2.00000*a_7*a_66-2.00000*a_6*a_67-2.00000*a_5*a_68-2.00000*a_4*a_69-2.00000*a_3*a_70-2.00000*a_2*a_71-2.00000*a_1*a_72)/(2.00000*a_0 - pow(2.0000000*z_0, 73.0));
complex<double>a_74 = (-d -2.00000*a_73*a_1-2.00000*a_72*a_2-2.00000*a_71*a_3-2.00000*a_70*a_4-2.00000*a_69*a_5-2.00000*a_68*a_6-2.00000*a_67*a_7-2.00000*a_66*a_8-2.00000*a_65*a_9-2.00000*a_64*a_10-2.00000*a_63*a_11-2.00000*a_62*a_12-2.00000*a_61*a_13-2.00000*a_60*a_14-2.00000*a_59*a_15-2.00000*a_58*a_16-2.00000*a_57*a_17-2.00000*a_56*a_18-2.00000*a_55*a_19-2.00000*a_54*a_20-2.00000*a_53*a_21-2.00000*a_52*a_22-2.00000*a_51*a_23-2.00000*a_50*a_24-2.00000*a_49*a_25-2.00000*a_48*a_26-2.00000*a_47*a_27-2.00000*a_46*a_28-2.00000*a_45*a_29-2.00000*a_44*a_30-2.00000*a_43*a_31-2.00000*a_42*a_32-2.00000*a_41*a_33-2.00000*a_40*a_34-2.00000*a_39*a_35-2.00000*a_38*a_36-a_37*a_37-2.00000*a_36*a_38-2.00000*a_35*a_39-2.00000*a_34*a_40-2.00000*a_33*a_41-2.00000*a_32*a_42-2.00000*a_31*a_43-2.00000*a_30*a_44-2.00000*a_29*a_45-2.00000*a_28*a_46-2.00000*a_27*a_47-2.00000*a_26*a_48-2.00000*a_25*a_49-2.00000*a_24*a_50-2.00000*a_23*a_51-2.00000*a_22*a_52-2.00000*a_21*a_53-2.00000*a_20*a_54-2.00000*a_19*a_55-2.00000*a_18*a_56-2.00000*a_17*a_57-2.00000*a_16*a_58-2.00000*a_15*a_59-2.00000*a_14*a_60-2.00000*a_13*a_61-2.00000*a_12*a_62-2.00000*a_11*a_63-2.00000*a_10*a_64-2.00000*a_9*a_65-2.00000*a_8*a_66-2.00000*a_7*a_67-2.00000*a_6*a_68-2.00000*a_5*a_69-2.00000*a_4*a_70-2.00000*a_3*a_71-2.00000*a_2*a_72-2.00000*a_1*a_73)/(2.00000*a_0 - pow(2.0000000*z_0, 74.0));
complex<double>a_75 = (-d -2.00000*a_74*a_1-2.00000*a_73*a_2-2.00000*a_72*a_3-2.00000*a_71*a_4-2.00000*a_70*a_5-2.00000*a_69*a_6-2.00000*a_68*a_7-2.00000*a_67*a_8-2.00000*a_66*a_9-2.00000*a_65*a_10-2.00000*a_64*a_11-2.00000*a_63*a_12-2.00000*a_62*a_13-2.00000*a_61*a_14-2.00000*a_60*a_15-2.00000*a_59*a_16-2.00000*a_58*a_17-2.00000*a_57*a_18-2.00000*a_56*a_19-2.00000*a_55*a_20-2.00000*a_54*a_21-2.00000*a_53*a_22-2.00000*a_52*a_23-2.00000*a_51*a_24-2.00000*a_50*a_25-2.00000*a_49*a_26-2.00000*a_48*a_27-2.00000*a_47*a_28-2.00000*a_46*a_29-2.00000*a_45*a_30-2.00000*a_44*a_31-2.00000*a_43*a_32-2.00000*a_42*a_33-2.00000*a_41*a_34-2.00000*a_40*a_35-2.00000*a_39*a_36-2.00000*a_38*a_37-2.00000*a_37*a_38-2.00000*a_36*a_39-2.00000*a_35*a_40-2.00000*a_34*a_41-2.00000*a_33*a_42-2.00000*a_32*a_43-2.00000*a_31*a_44-2.00000*a_30*a_45-2.00000*a_29*a_46-2.00000*a_28*a_47-2.00000*a_27*a_48-2.00000*a_26*a_49-2.00000*a_25*a_50-2.00000*a_24*a_51-2.00000*a_23*a_52-2.00000*a_22*a_53-2.00000*a_21*a_54-2.00000*a_20*a_55-2.00000*a_19*a_56-2.00000*a_18*a_57-2.00000*a_17*a_58-2.00000*a_16*a_59-2.00000*a_15*a_60-2.00000*a_14*a_61-2.00000*a_13*a_62-2.00000*a_12*a_63-2.00000*a_11*a_64-2.00000*a_10*a_65-2.00000*a_9*a_66-2.00000*a_8*a_67-2.00000*a_7*a_68-2.00000*a_6*a_69-2.00000*a_5*a_70-2.00000*a_4*a_71-2.00000*a_3*a_72-2.00000*a_2*a_73-2.00000*a_1*a_74)/(2.00000*a_0 - pow(2.0000000*z_0, 75.0));
complex<double>a_76 = (-d -2.00000*a_75*a_1-2.00000*a_74*a_2-2.00000*a_73*a_3-2.00000*a_72*a_4-2.00000*a_71*a_5-2.00000*a_70*a_6-2.00000*a_69*a_7-2.00000*a_68*a_8-2.00000*a_67*a_9-2.00000*a_66*a_10-2.00000*a_65*a_11-2.00000*a_64*a_12-2.00000*a_63*a_13-2.00000*a_62*a_14-2.00000*a_61*a_15-2.00000*a_60*a_16-2.00000*a_59*a_17-2.00000*a_58*a_18-2.00000*a_57*a_19-2.00000*a_56*a_20-2.00000*a_55*a_21-2.00000*a_54*a_22-2.00000*a_53*a_23-2.00000*a_52*a_24-2.00000*a_51*a_25-2.00000*a_50*a_26-2.00000*a_49*a_27-2.00000*a_48*a_28-2.00000*a_47*a_29-2.00000*a_46*a_30-2.00000*a_45*a_31-2.00000*a_44*a_32-2.00000*a_43*a_33-2.00000*a_42*a_34-2.00000*a_41*a_35-2.00000*a_40*a_36-2.00000*a_39*a_37-a_38*a_38-2.00000*a_37*a_39-2.00000*a_36*a_40-2.00000*a_35*a_41-2.00000*a_34*a_42-2.00000*a_33*a_43-2.00000*a_32*a_44-2.00000*a_31*a_45-2.00000*a_30*a_46-2.00000*a_29*a_47-2.00000*a_28*a_48-2.00000*a_27*a_49-2.00000*a_26*a_50-2.00000*a_25*a_51-2.00000*a_24*a_52-2.00000*a_23*a_53-2.00000*a_22*a_54-2.00000*a_21*a_55-2.00000*a_20*a_56-2.00000*a_19*a_57-2.00000*a_18*a_58-2.00000*a_17*a_59-2.00000*a_16*a_60-2.00000*a_15*a_61-2.00000*a_14*a_62-2.00000*a_13*a_63-2.00000*a_12*a_64-2.00000*a_11*a_65-2.00000*a_10*a_66-2.00000*a_9*a_67-2.00000*a_8*a_68-2.00000*a_7*a_69-2.00000*a_6*a_70-2.00000*a_5*a_71-2.00000*a_4*a_72-2.00000*a_3*a_73-2.00000*a_2*a_74-2.00000*a_1*a_75)/(2.00000*a_0 - pow(2.0000000*z_0, 76.0));
complex<double>a_77 = (-d -2.00000*a_76*a_1-2.00000*a_75*a_2-2.00000*a_74*a_3-2.00000*a_73*a_4-2.00000*a_72*a_5-2.00000*a_71*a_6-2.00000*a_70*a_7-2.00000*a_69*a_8-2.00000*a_68*a_9-2.00000*a_67*a_10-2.00000*a_66*a_11-2.00000*a_65*a_12-2.00000*a_64*a_13-2.00000*a_63*a_14-2.00000*a_62*a_15-2.00000*a_61*a_16-2.00000*a_60*a_17-2.00000*a_59*a_18-2.00000*a_58*a_19-2.00000*a_57*a_20-2.00000*a_56*a_21-2.00000*a_55*a_22-2.00000*a_54*a_23-2.00000*a_53*a_24-2.00000*a_52*a_25-2.00000*a_51*a_26-2.00000*a_50*a_27-2.00000*a_49*a_28-2.00000*a_48*a_29-2.00000*a_47*a_30-2.00000*a_46*a_31-2.00000*a_45*a_32-2.00000*a_44*a_33-2.00000*a_43*a_34-2.00000*a_42*a_35-2.00000*a_41*a_36-2.00000*a_40*a_37-2.00000*a_39*a_38-2.00000*a_38*a_39-2.00000*a_37*a_40-2.00000*a_36*a_41-2.00000*a_35*a_42-2.00000*a_34*a_43-2.00000*a_33*a_44-2.00000*a_32*a_45-2.00000*a_31*a_46-2.00000*a_30*a_47-2.00000*a_29*a_48-2.00000*a_28*a_49-2.00000*a_27*a_50-2.00000*a_26*a_51-2.00000*a_25*a_52-2.00000*a_24*a_53-2.00000*a_23*a_54-2.00000*a_22*a_55-2.00000*a_21*a_56-2.00000*a_20*a_57-2.00000*a_19*a_58-2.00000*a_18*a_59-2.00000*a_17*a_60-2.00000*a_16*a_61-2.00000*a_15*a_62-2.00000*a_14*a_63-2.00000*a_13*a_64-2.00000*a_12*a_65-2.00000*a_11*a_66-2.00000*a_10*a_67-2.00000*a_9*a_68-2.00000*a_8*a_69-2.00000*a_7*a_70-2.00000*a_6*a_71-2.00000*a_5*a_72-2.00000*a_4*a_73-2.00000*a_3*a_74-2.00000*a_2*a_75-2.00000*a_1*a_76)/(2.00000*a_0 - pow(2.0000000*z_0, 77.0));
complex<double>a_78 = (-d -2.00000*a_77*a_1-2.00000*a_76*a_2-2.00000*a_75*a_3-2.00000*a_74*a_4-2.00000*a_73*a_5-2.00000*a_72*a_6-2.00000*a_71*a_7-2.00000*a_70*a_8-2.00000*a_69*a_9-2.00000*a_68*a_10-2.00000*a_67*a_11-2.00000*a_66*a_12-2.00000*a_65*a_13-2.00000*a_64*a_14-2.00000*a_63*a_15-2.00000*a_62*a_16-2.00000*a_61*a_17-2.00000*a_60*a_18-2.00000*a_59*a_19-2.00000*a_58*a_20-2.00000*a_57*a_21-2.00000*a_56*a_22-2.00000*a_55*a_23-2.00000*a_54*a_24-2.00000*a_53*a_25-2.00000*a_52*a_26-2.00000*a_51*a_27-2.00000*a_50*a_28-2.00000*a_49*a_29-2.00000*a_48*a_30-2.00000*a_47*a_31-2.00000*a_46*a_32-2.00000*a_45*a_33-2.00000*a_44*a_34-2.00000*a_43*a_35-2.00000*a_42*a_36-2.00000*a_41*a_37-2.00000*a_40*a_38-a_39*a_39-2.00000*a_38*a_40-2.00000*a_37*a_41-2.00000*a_36*a_42-2.00000*a_35*a_43-2.00000*a_34*a_44-2.00000*a_33*a_45-2.00000*a_32*a_46-2.00000*a_31*a_47-2.00000*a_30*a_48-2.00000*a_29*a_49-2.00000*a_28*a_50-2.00000*a_27*a_51-2.00000*a_26*a_52-2.00000*a_25*a_53-2.00000*a_24*a_54-2.00000*a_23*a_55-2.00000*a_22*a_56-2.00000*a_21*a_57-2.00000*a_20*a_58-2.00000*a_19*a_59-2.00000*a_18*a_60-2.00000*a_17*a_61-2.00000*a_16*a_62-2.00000*a_15*a_63-2.00000*a_14*a_64-2.00000*a_13*a_65-2.00000*a_12*a_66-2.00000*a_11*a_67-2.00000*a_10*a_68-2.00000*a_9*a_69-2.00000*a_8*a_70-2.00000*a_7*a_71-2.00000*a_6*a_72-2.00000*a_5*a_73-2.00000*a_4*a_74-2.00000*a_3*a_75-2.00000*a_2*a_76-2.00000*a_1*a_77)/(2.00000*a_0 - pow(2.0000000*z_0, 78.0));
complex<double>a_79 = (-d -2.00000*a_78*a_1-2.00000*a_77*a_2-2.00000*a_76*a_3-2.00000*a_75*a_4-2.00000*a_74*a_5-2.00000*a_73*a_6-2.00000*a_72*a_7-2.00000*a_71*a_8-2.00000*a_70*a_9-2.00000*a_69*a_10-2.00000*a_68*a_11-2.00000*a_67*a_12-2.00000*a_66*a_13-2.00000*a_65*a_14-2.00000*a_64*a_15-2.00000*a_63*a_16-2.00000*a_62*a_17-2.00000*a_61*a_18-2.00000*a_60*a_19-2.00000*a_59*a_20-2.00000*a_58*a_21-2.00000*a_57*a_22-2.00000*a_56*a_23-2.00000*a_55*a_24-2.00000*a_54*a_25-2.00000*a_53*a_26-2.00000*a_52*a_27-2.00000*a_51*a_28-2.00000*a_50*a_29-2.00000*a_49*a_30-2.00000*a_48*a_31-2.00000*a_47*a_32-2.00000*a_46*a_33-2.00000*a_45*a_34-2.00000*a_44*a_35-2.00000*a_43*a_36-2.00000*a_42*a_37-2.00000*a_41*a_38-2.00000*a_40*a_39-2.00000*a_39*a_40-2.00000*a_38*a_41-2.00000*a_37*a_42-2.00000*a_36*a_43-2.00000*a_35*a_44-2.00000*a_34*a_45-2.00000*a_33*a_46-2.00000*a_32*a_47-2.00000*a_31*a_48-2.00000*a_30*a_49-2.00000*a_29*a_50-2.00000*a_28*a_51-2.00000*a_27*a_52-2.00000*a_26*a_53-2.00000*a_25*a_54-2.00000*a_24*a_55-2.00000*a_23*a_56-2.00000*a_22*a_57-2.00000*a_21*a_58-2.00000*a_20*a_59-2.00000*a_19*a_60-2.00000*a_18*a_61-2.00000*a_17*a_62-2.00000*a_16*a_63-2.00000*a_15*a_64-2.00000*a_14*a_65-2.00000*a_13*a_66-2.00000*a_12*a_67-2.00000*a_11*a_68-2.00000*a_10*a_69-2.00000*a_9*a_70-2.00000*a_8*a_71-2.00000*a_7*a_72-2.00000*a_6*a_73-2.00000*a_5*a_74-2.00000*a_4*a_75-2.00000*a_3*a_76-2.00000*a_2*a_77-2.00000*a_1*a_78)/(2.00000*a_0 - pow(2.0000000*z_0, 79.0));
complex<double>a_80 = (-d -2.00000*a_79*a_1-2.00000*a_78*a_2-2.00000*a_77*a_3-2.00000*a_76*a_4-2.00000*a_75*a_5-2.00000*a_74*a_6-2.00000*a_73*a_7-2.00000*a_72*a_8-2.00000*a_71*a_9-2.00000*a_70*a_10-2.00000*a_69*a_11-2.00000*a_68*a_12-2.00000*a_67*a_13-2.00000*a_66*a_14-2.00000*a_65*a_15-2.00000*a_64*a_16-2.00000*a_63*a_17-2.00000*a_62*a_18-2.00000*a_61*a_19-2.00000*a_60*a_20-2.00000*a_59*a_21-2.00000*a_58*a_22-2.00000*a_57*a_23-2.00000*a_56*a_24-2.00000*a_55*a_25-2.00000*a_54*a_26-2.00000*a_53*a_27-2.00000*a_52*a_28-2.00000*a_51*a_29-2.00000*a_50*a_30-2.00000*a_49*a_31-2.00000*a_48*a_32-2.00000*a_47*a_33-2.00000*a_46*a_34-2.00000*a_45*a_35-2.00000*a_44*a_36-2.00000*a_43*a_37-2.00000*a_42*a_38-2.00000*a_41*a_39-a_40*a_40-2.00000*a_39*a_41-2.00000*a_38*a_42-2.00000*a_37*a_43-2.00000*a_36*a_44-2.00000*a_35*a_45-2.00000*a_34*a_46-2.00000*a_33*a_47-2.00000*a_32*a_48-2.00000*a_31*a_49-2.00000*a_30*a_50-2.00000*a_29*a_51-2.00000*a_28*a_52-2.00000*a_27*a_53-2.00000*a_26*a_54-2.00000*a_25*a_55-2.00000*a_24*a_56-2.00000*a_23*a_57-2.00000*a_22*a_58-2.00000*a_21*a_59-2.00000*a_20*a_60-2.00000*a_19*a_61-2.00000*a_18*a_62-2.00000*a_17*a_63-2.00000*a_16*a_64-2.00000*a_15*a_65-2.00000*a_14*a_66-2.00000*a_13*a_67-2.00000*a_12*a_68-2.00000*a_11*a_69-2.00000*a_10*a_70-2.00000*a_9*a_71-2.00000*a_8*a_72-2.00000*a_7*a_73-2.00000*a_6*a_74-2.00000*a_5*a_75-2.00000*a_4*a_76-2.00000*a_3*a_77-2.00000*a_2*a_78-2.00000*a_1*a_79)/(2.00000*a_0 - pow(2.0000000*z_0, 80.0));
complex<double>a_81 = (-d -2.00000*a_80*a_1-2.00000*a_79*a_2-2.00000*a_78*a_3-2.00000*a_77*a_4-2.00000*a_76*a_5-2.00000*a_75*a_6-2.00000*a_74*a_7-2.00000*a_73*a_8-2.00000*a_72*a_9-2.00000*a_71*a_10-2.00000*a_70*a_11-2.00000*a_69*a_12-2.00000*a_68*a_13-2.00000*a_67*a_14-2.00000*a_66*a_15-2.00000*a_65*a_16-2.00000*a_64*a_17-2.00000*a_63*a_18-2.00000*a_62*a_19-2.00000*a_61*a_20-2.00000*a_60*a_21-2.00000*a_59*a_22-2.00000*a_58*a_23-2.00000*a_57*a_24-2.00000*a_56*a_25-2.00000*a_55*a_26-2.00000*a_54*a_27-2.00000*a_53*a_28-2.00000*a_52*a_29-2.00000*a_51*a_30-2.00000*a_50*a_31-2.00000*a_49*a_32-2.00000*a_48*a_33-2.00000*a_47*a_34-2.00000*a_46*a_35-2.00000*a_45*a_36-2.00000*a_44*a_37-2.00000*a_43*a_38-2.00000*a_42*a_39-2.00000*a_41*a_40-2.00000*a_40*a_41-2.00000*a_39*a_42-2.00000*a_38*a_43-2.00000*a_37*a_44-2.00000*a_36*a_45-2.00000*a_35*a_46-2.00000*a_34*a_47-2.00000*a_33*a_48-2.00000*a_32*a_49-2.00000*a_31*a_50-2.00000*a_30*a_51-2.00000*a_29*a_52-2.00000*a_28*a_53-2.00000*a_27*a_54-2.00000*a_26*a_55-2.00000*a_25*a_56-2.00000*a_24*a_57-2.00000*a_23*a_58-2.00000*a_22*a_59-2.00000*a_21*a_60-2.00000*a_20*a_61-2.00000*a_19*a_62-2.00000*a_18*a_63-2.00000*a_17*a_64-2.00000*a_16*a_65-2.00000*a_15*a_66-2.00000*a_14*a_67-2.00000*a_13*a_68-2.00000*a_12*a_69-2.00000*a_11*a_70-2.00000*a_10*a_71-2.00000*a_9*a_72-2.00000*a_8*a_73-2.00000*a_7*a_74-2.00000*a_6*a_75-2.00000*a_5*a_76-2.00000*a_4*a_77-2.00000*a_3*a_78-2.00000*a_2*a_79-2.00000*a_1*a_80)/(2.00000*a_0 - pow(2.0000000*z_0, 81.0));
complex<double>a_82 = (-d -2.00000*a_81*a_1-2.00000*a_80*a_2-2.00000*a_79*a_3-2.00000*a_78*a_4-2.00000*a_77*a_5-2.00000*a_76*a_6-2.00000*a_75*a_7-2.00000*a_74*a_8-2.00000*a_73*a_9-2.00000*a_72*a_10-2.00000*a_71*a_11-2.00000*a_70*a_12-2.00000*a_69*a_13-2.00000*a_68*a_14-2.00000*a_67*a_15-2.00000*a_66*a_16-2.00000*a_65*a_17-2.00000*a_64*a_18-2.00000*a_63*a_19-2.00000*a_62*a_20-2.00000*a_61*a_21-2.00000*a_60*a_22-2.00000*a_59*a_23-2.00000*a_58*a_24-2.00000*a_57*a_25-2.00000*a_56*a_26-2.00000*a_55*a_27-2.00000*a_54*a_28-2.00000*a_53*a_29-2.00000*a_52*a_30-2.00000*a_51*a_31-2.00000*a_50*a_32-2.00000*a_49*a_33-2.00000*a_48*a_34-2.00000*a_47*a_35-2.00000*a_46*a_36-2.00000*a_45*a_37-2.00000*a_44*a_38-2.00000*a_43*a_39-2.00000*a_42*a_40-a_41*a_41-2.00000*a_40*a_42-2.00000*a_39*a_43-2.00000*a_38*a_44-2.00000*a_37*a_45-2.00000*a_36*a_46-2.00000*a_35*a_47-2.00000*a_34*a_48-2.00000*a_33*a_49-2.00000*a_32*a_50-2.00000*a_31*a_51-2.00000*a_30*a_52-2.00000*a_29*a_53-2.00000*a_28*a_54-2.00000*a_27*a_55-2.00000*a_26*a_56-2.00000*a_25*a_57-2.00000*a_24*a_58-2.00000*a_23*a_59-2.00000*a_22*a_60-2.00000*a_21*a_61-2.00000*a_20*a_62-2.00000*a_19*a_63-2.00000*a_18*a_64-2.00000*a_17*a_65-2.00000*a_16*a_66-2.00000*a_15*a_67-2.00000*a_14*a_68-2.00000*a_13*a_69-2.00000*a_12*a_70-2.00000*a_11*a_71-2.00000*a_10*a_72-2.00000*a_9*a_73-2.00000*a_8*a_74-2.00000*a_7*a_75-2.00000*a_6*a_76-2.00000*a_5*a_77-2.00000*a_4*a_78-2.00000*a_3*a_79-2.00000*a_2*a_80-2.00000*a_1*a_81)/(2.00000*a_0 - pow(2.0000000*z_0, 82.0));
complex<double>a_83 = (-d -2.00000*a_82*a_1-2.00000*a_81*a_2-2.00000*a_80*a_3-2.00000*a_79*a_4-2.00000*a_78*a_5-2.00000*a_77*a_6-2.00000*a_76*a_7-2.00000*a_75*a_8-2.00000*a_74*a_9-2.00000*a_73*a_10-2.00000*a_72*a_11-2.00000*a_71*a_12-2.00000*a_70*a_13-2.00000*a_69*a_14-2.00000*a_68*a_15-2.00000*a_67*a_16-2.00000*a_66*a_17-2.00000*a_65*a_18-2.00000*a_64*a_19-2.00000*a_63*a_20-2.00000*a_62*a_21-2.00000*a_61*a_22-2.00000*a_60*a_23-2.00000*a_59*a_24-2.00000*a_58*a_25-2.00000*a_57*a_26-2.00000*a_56*a_27-2.00000*a_55*a_28-2.00000*a_54*a_29-2.00000*a_53*a_30-2.00000*a_52*a_31-2.00000*a_51*a_32-2.00000*a_50*a_33-2.00000*a_49*a_34-2.00000*a_48*a_35-2.00000*a_47*a_36-2.00000*a_46*a_37-2.00000*a_45*a_38-2.00000*a_44*a_39-2.00000*a_43*a_40-2.00000*a_42*a_41-2.00000*a_41*a_42-2.00000*a_40*a_43-2.00000*a_39*a_44-2.00000*a_38*a_45-2.00000*a_37*a_46-2.00000*a_36*a_47-2.00000*a_35*a_48-2.00000*a_34*a_49-2.00000*a_33*a_50-2.00000*a_32*a_51-2.00000*a_31*a_52-2.00000*a_30*a_53-2.00000*a_29*a_54-2.00000*a_28*a_55-2.00000*a_27*a_56-2.00000*a_26*a_57-2.00000*a_25*a_58-2.00000*a_24*a_59-2.00000*a_23*a_60-2.00000*a_22*a_61-2.00000*a_21*a_62-2.00000*a_20*a_63-2.00000*a_19*a_64-2.00000*a_18*a_65-2.00000*a_17*a_66-2.00000*a_16*a_67-2.00000*a_15*a_68-2.00000*a_14*a_69-2.00000*a_13*a_70-2.00000*a_12*a_71-2.00000*a_11*a_72-2.00000*a_10*a_73-2.00000*a_9*a_74-2.00000*a_8*a_75-2.00000*a_7*a_76-2.00000*a_6*a_77-2.00000*a_5*a_78-2.00000*a_4*a_79-2.00000*a_3*a_80-2.00000*a_2*a_81-2.00000*a_1*a_82)/(2.00000*a_0 - pow(2.0000000*z_0, 83.0));
complex<double>a_84 = (-d -2.00000*a_83*a_1-2.00000*a_82*a_2-2.00000*a_81*a_3-2.00000*a_80*a_4-2.00000*a_79*a_5-2.00000*a_78*a_6-2.00000*a_77*a_7-2.00000*a_76*a_8-2.00000*a_75*a_9-2.00000*a_74*a_10-2.00000*a_73*a_11-2.00000*a_72*a_12-2.00000*a_71*a_13-2.00000*a_70*a_14-2.00000*a_69*a_15-2.00000*a_68*a_16-2.00000*a_67*a_17-2.00000*a_66*a_18-2.00000*a_65*a_19-2.00000*a_64*a_20-2.00000*a_63*a_21-2.00000*a_62*a_22-2.00000*a_61*a_23-2.00000*a_60*a_24-2.00000*a_59*a_25-2.00000*a_58*a_26-2.00000*a_57*a_27-2.00000*a_56*a_28-2.00000*a_55*a_29-2.00000*a_54*a_30-2.00000*a_53*a_31-2.00000*a_52*a_32-2.00000*a_51*a_33-2.00000*a_50*a_34-2.00000*a_49*a_35-2.00000*a_48*a_36-2.00000*a_47*a_37-2.00000*a_46*a_38-2.00000*a_45*a_39-2.00000*a_44*a_40-2.00000*a_43*a_41-a_42*a_42-2.00000*a_41*a_43-2.00000*a_40*a_44-2.00000*a_39*a_45-2.00000*a_38*a_46-2.00000*a_37*a_47-2.00000*a_36*a_48-2.00000*a_35*a_49-2.00000*a_34*a_50-2.00000*a_33*a_51-2.00000*a_32*a_52-2.00000*a_31*a_53-2.00000*a_30*a_54-2.00000*a_29*a_55-2.00000*a_28*a_56-2.00000*a_27*a_57-2.00000*a_26*a_58-2.00000*a_25*a_59-2.00000*a_24*a_60-2.00000*a_23*a_61-2.00000*a_22*a_62-2.00000*a_21*a_63-2.00000*a_20*a_64-2.00000*a_19*a_65-2.00000*a_18*a_66-2.00000*a_17*a_67-2.00000*a_16*a_68-2.00000*a_15*a_69-2.00000*a_14*a_70-2.00000*a_13*a_71-2.00000*a_12*a_72-2.00000*a_11*a_73-2.00000*a_10*a_74-2.00000*a_9*a_75-2.00000*a_8*a_76-2.00000*a_7*a_77-2.00000*a_6*a_78-2.00000*a_5*a_79-2.00000*a_4*a_80-2.00000*a_3*a_81-2.00000*a_2*a_82-2.00000*a_1*a_83)/(2.00000*a_0 - pow(2.0000000*z_0, 84.0));
complex<double>a_85 = (-d -2.00000*a_84*a_1-2.00000*a_83*a_2-2.00000*a_82*a_3-2.00000*a_81*a_4-2.00000*a_80*a_5-2.00000*a_79*a_6-2.00000*a_78*a_7-2.00000*a_77*a_8-2.00000*a_76*a_9-2.00000*a_75*a_10-2.00000*a_74*a_11-2.00000*a_73*a_12-2.00000*a_72*a_13-2.00000*a_71*a_14-2.00000*a_70*a_15-2.00000*a_69*a_16-2.00000*a_68*a_17-2.00000*a_67*a_18-2.00000*a_66*a_19-2.00000*a_65*a_20-2.00000*a_64*a_21-2.00000*a_63*a_22-2.00000*a_62*a_23-2.00000*a_61*a_24-2.00000*a_60*a_25-2.00000*a_59*a_26-2.00000*a_58*a_27-2.00000*a_57*a_28-2.00000*a_56*a_29-2.00000*a_55*a_30-2.00000*a_54*a_31-2.00000*a_53*a_32-2.00000*a_52*a_33-2.00000*a_51*a_34-2.00000*a_50*a_35-2.00000*a_49*a_36-2.00000*a_48*a_37-2.00000*a_47*a_38-2.00000*a_46*a_39-2.00000*a_45*a_40-2.00000*a_44*a_41-2.00000*a_43*a_42-2.00000*a_42*a_43-2.00000*a_41*a_44-2.00000*a_40*a_45-2.00000*a_39*a_46-2.00000*a_38*a_47-2.00000*a_37*a_48-2.00000*a_36*a_49-2.00000*a_35*a_50-2.00000*a_34*a_51-2.00000*a_33*a_52-2.00000*a_32*a_53-2.00000*a_31*a_54-2.00000*a_30*a_55-2.00000*a_29*a_56-2.00000*a_28*a_57-2.00000*a_27*a_58-2.00000*a_26*a_59-2.00000*a_25*a_60-2.00000*a_24*a_61-2.00000*a_23*a_62-2.00000*a_22*a_63-2.00000*a_21*a_64-2.00000*a_20*a_65-2.00000*a_19*a_66-2.00000*a_18*a_67-2.00000*a_17*a_68-2.00000*a_16*a_69-2.00000*a_15*a_70-2.00000*a_14*a_71-2.00000*a_13*a_72-2.00000*a_12*a_73-2.00000*a_11*a_74-2.00000*a_10*a_75-2.00000*a_9*a_76-2.00000*a_8*a_77-2.00000*a_7*a_78-2.00000*a_6*a_79-2.00000*a_5*a_80-2.00000*a_4*a_81-2.00000*a_3*a_82-2.00000*a_2*a_83-2.00000*a_1*a_84)/(2.00000*a_0 - pow(2.0000000*z_0, 85.0));
complex<double>a_86 = (-d -2.00000*a_85*a_1-2.00000*a_84*a_2-2.00000*a_83*a_3-2.00000*a_82*a_4-2.00000*a_81*a_5-2.00000*a_80*a_6-2.00000*a_79*a_7-2.00000*a_78*a_8-2.00000*a_77*a_9-2.00000*a_76*a_10-2.00000*a_75*a_11-2.00000*a_74*a_12-2.00000*a_73*a_13-2.00000*a_72*a_14-2.00000*a_71*a_15-2.00000*a_70*a_16-2.00000*a_69*a_17-2.00000*a_68*a_18-2.00000*a_67*a_19-2.00000*a_66*a_20-2.00000*a_65*a_21-2.00000*a_64*a_22-2.00000*a_63*a_23-2.00000*a_62*a_24-2.00000*a_61*a_25-2.00000*a_60*a_26-2.00000*a_59*a_27-2.00000*a_58*a_28-2.00000*a_57*a_29-2.00000*a_56*a_30-2.00000*a_55*a_31-2.00000*a_54*a_32-2.00000*a_53*a_33-2.00000*a_52*a_34-2.00000*a_51*a_35-2.00000*a_50*a_36-2.00000*a_49*a_37-2.00000*a_48*a_38-2.00000*a_47*a_39-2.00000*a_46*a_40-2.00000*a_45*a_41-2.00000*a_44*a_42-a_43*a_43-2.00000*a_42*a_44-2.00000*a_41*a_45-2.00000*a_40*a_46-2.00000*a_39*a_47-2.00000*a_38*a_48-2.00000*a_37*a_49-2.00000*a_36*a_50-2.00000*a_35*a_51-2.00000*a_34*a_52-2.00000*a_33*a_53-2.00000*a_32*a_54-2.00000*a_31*a_55-2.00000*a_30*a_56-2.00000*a_29*a_57-2.00000*a_28*a_58-2.00000*a_27*a_59-2.00000*a_26*a_60-2.00000*a_25*a_61-2.00000*a_24*a_62-2.00000*a_23*a_63-2.00000*a_22*a_64-2.00000*a_21*a_65-2.00000*a_20*a_66-2.00000*a_19*a_67-2.00000*a_18*a_68-2.00000*a_17*a_69-2.00000*a_16*a_70-2.00000*a_15*a_71-2.00000*a_14*a_72-2.00000*a_13*a_73-2.00000*a_12*a_74-2.00000*a_11*a_75-2.00000*a_10*a_76-2.00000*a_9*a_77-2.00000*a_8*a_78-2.00000*a_7*a_79-2.00000*a_6*a_80-2.00000*a_5*a_81-2.00000*a_4*a_82-2.00000*a_3*a_83-2.00000*a_2*a_84-2.00000*a_1*a_85)/(2.00000*a_0 - pow(2.0000000*z_0, 86.0));
complex<double>a_87 = (-d -2.00000*a_86*a_1-2.00000*a_85*a_2-2.00000*a_84*a_3-2.00000*a_83*a_4-2.00000*a_82*a_5-2.00000*a_81*a_6-2.00000*a_80*a_7-2.00000*a_79*a_8-2.00000*a_78*a_9-2.00000*a_77*a_10-2.00000*a_76*a_11-2.00000*a_75*a_12-2.00000*a_74*a_13-2.00000*a_73*a_14-2.00000*a_72*a_15-2.00000*a_71*a_16-2.00000*a_70*a_17-2.00000*a_69*a_18-2.00000*a_68*a_19-2.00000*a_67*a_20-2.00000*a_66*a_21-2.00000*a_65*a_22-2.00000*a_64*a_23-2.00000*a_63*a_24-2.00000*a_62*a_25-2.00000*a_61*a_26-2.00000*a_60*a_27-2.00000*a_59*a_28-2.00000*a_58*a_29-2.00000*a_57*a_30-2.00000*a_56*a_31-2.00000*a_55*a_32-2.00000*a_54*a_33-2.00000*a_53*a_34-2.00000*a_52*a_35-2.00000*a_51*a_36-2.00000*a_50*a_37-2.00000*a_49*a_38-2.00000*a_48*a_39-2.00000*a_47*a_40-2.00000*a_46*a_41-2.00000*a_45*a_42-2.00000*a_44*a_43-2.00000*a_43*a_44-2.00000*a_42*a_45-2.00000*a_41*a_46-2.00000*a_40*a_47-2.00000*a_39*a_48-2.00000*a_38*a_49-2.00000*a_37*a_50-2.00000*a_36*a_51-2.00000*a_35*a_52-2.00000*a_34*a_53-2.00000*a_33*a_54-2.00000*a_32*a_55-2.00000*a_31*a_56-2.00000*a_30*a_57-2.00000*a_29*a_58-2.00000*a_28*a_59-2.00000*a_27*a_60-2.00000*a_26*a_61-2.00000*a_25*a_62-2.00000*a_24*a_63-2.00000*a_23*a_64-2.00000*a_22*a_65-2.00000*a_21*a_66-2.00000*a_20*a_67-2.00000*a_19*a_68-2.00000*a_18*a_69-2.00000*a_17*a_70-2.00000*a_16*a_71-2.00000*a_15*a_72-2.00000*a_14*a_73-2.00000*a_13*a_74-2.00000*a_12*a_75-2.00000*a_11*a_76-2.00000*a_10*a_77-2.00000*a_9*a_78-2.00000*a_8*a_79-2.00000*a_7*a_80-2.00000*a_6*a_81-2.00000*a_5*a_82-2.00000*a_4*a_83-2.00000*a_3*a_84-2.00000*a_2*a_85-2.00000*a_1*a_86)/(2.00000*a_0 - pow(2.0000000*z_0, 87.0));
complex<double>a_88 = (-d -2.00000*a_87*a_1-2.00000*a_86*a_2-2.00000*a_85*a_3-2.00000*a_84*a_4-2.00000*a_83*a_5-2.00000*a_82*a_6-2.00000*a_81*a_7-2.00000*a_80*a_8-2.00000*a_79*a_9-2.00000*a_78*a_10-2.00000*a_77*a_11-2.00000*a_76*a_12-2.00000*a_75*a_13-2.00000*a_74*a_14-2.00000*a_73*a_15-2.00000*a_72*a_16-2.00000*a_71*a_17-2.00000*a_70*a_18-2.00000*a_69*a_19-2.00000*a_68*a_20-2.00000*a_67*a_21-2.00000*a_66*a_22-2.00000*a_65*a_23-2.00000*a_64*a_24-2.00000*a_63*a_25-2.00000*a_62*a_26-2.00000*a_61*a_27-2.00000*a_60*a_28-2.00000*a_59*a_29-2.00000*a_58*a_30-2.00000*a_57*a_31-2.00000*a_56*a_32-2.00000*a_55*a_33-2.00000*a_54*a_34-2.00000*a_53*a_35-2.00000*a_52*a_36-2.00000*a_51*a_37-2.00000*a_50*a_38-2.00000*a_49*a_39-2.00000*a_48*a_40-2.00000*a_47*a_41-2.00000*a_46*a_42-2.00000*a_45*a_43-a_44*a_44-2.00000*a_43*a_45-2.00000*a_42*a_46-2.00000*a_41*a_47-2.00000*a_40*a_48-2.00000*a_39*a_49-2.00000*a_38*a_50-2.00000*a_37*a_51-2.00000*a_36*a_52-2.00000*a_35*a_53-2.00000*a_34*a_54-2.00000*a_33*a_55-2.00000*a_32*a_56-2.00000*a_31*a_57-2.00000*a_30*a_58-2.00000*a_29*a_59-2.00000*a_28*a_60-2.00000*a_27*a_61-2.00000*a_26*a_62-2.00000*a_25*a_63-2.00000*a_24*a_64-2.00000*a_23*a_65-2.00000*a_22*a_66-2.00000*a_21*a_67-2.00000*a_20*a_68-2.00000*a_19*a_69-2.00000*a_18*a_70-2.00000*a_17*a_71-2.00000*a_16*a_72-2.00000*a_15*a_73-2.00000*a_14*a_74-2.00000*a_13*a_75-2.00000*a_12*a_76-2.00000*a_11*a_77-2.00000*a_10*a_78-2.00000*a_9*a_79-2.00000*a_8*a_80-2.00000*a_7*a_81-2.00000*a_6*a_82-2.00000*a_5*a_83-2.00000*a_4*a_84-2.00000*a_3*a_85-2.00000*a_2*a_86-2.00000*a_1*a_87)/(2.00000*a_0 - pow(2.0000000*z_0, 88.0));
complex<double>a_89 = (-d -2.00000*a_88*a_1-2.00000*a_87*a_2-2.00000*a_86*a_3-2.00000*a_85*a_4-2.00000*a_84*a_5-2.00000*a_83*a_6-2.00000*a_82*a_7-2.00000*a_81*a_8-2.00000*a_80*a_9-2.00000*a_79*a_10-2.00000*a_78*a_11-2.00000*a_77*a_12-2.00000*a_76*a_13-2.00000*a_75*a_14-2.00000*a_74*a_15-2.00000*a_73*a_16-2.00000*a_72*a_17-2.00000*a_71*a_18-2.00000*a_70*a_19-2.00000*a_69*a_20-2.00000*a_68*a_21-2.00000*a_67*a_22-2.00000*a_66*a_23-2.00000*a_65*a_24-2.00000*a_64*a_25-2.00000*a_63*a_26-2.00000*a_62*a_27-2.00000*a_61*a_28-2.00000*a_60*a_29-2.00000*a_59*a_30-2.00000*a_58*a_31-2.00000*a_57*a_32-2.00000*a_56*a_33-2.00000*a_55*a_34-2.00000*a_54*a_35-2.00000*a_53*a_36-2.00000*a_52*a_37-2.00000*a_51*a_38-2.00000*a_50*a_39-2.00000*a_49*a_40-2.00000*a_48*a_41-2.00000*a_47*a_42-2.00000*a_46*a_43-2.00000*a_45*a_44-2.00000*a_44*a_45-2.00000*a_43*a_46-2.00000*a_42*a_47-2.00000*a_41*a_48-2.00000*a_40*a_49-2.00000*a_39*a_50-2.00000*a_38*a_51-2.00000*a_37*a_52-2.00000*a_36*a_53-2.00000*a_35*a_54-2.00000*a_34*a_55-2.00000*a_33*a_56-2.00000*a_32*a_57-2.00000*a_31*a_58-2.00000*a_30*a_59-2.00000*a_29*a_60-2.00000*a_28*a_61-2.00000*a_27*a_62-2.00000*a_26*a_63-2.00000*a_25*a_64-2.00000*a_24*a_65-2.00000*a_23*a_66-2.00000*a_22*a_67-2.00000*a_21*a_68-2.00000*a_20*a_69-2.00000*a_19*a_70-2.00000*a_18*a_71-2.00000*a_17*a_72-2.00000*a_16*a_73-2.00000*a_15*a_74-2.00000*a_14*a_75-2.00000*a_13*a_76-2.00000*a_12*a_77-2.00000*a_11*a_78-2.00000*a_10*a_79-2.00000*a_9*a_80-2.00000*a_8*a_81-2.00000*a_7*a_82-2.00000*a_6*a_83-2.00000*a_5*a_84-2.00000*a_4*a_85-2.00000*a_3*a_86-2.00000*a_2*a_87-2.00000*a_1*a_88)/(2.00000*a_0 - pow(2.0000000*z_0, 89.0));
complex<double>a_90 = (-d -2.00000*a_89*a_1-2.00000*a_88*a_2-2.00000*a_87*a_3-2.00000*a_86*a_4-2.00000*a_85*a_5-2.00000*a_84*a_6-2.00000*a_83*a_7-2.00000*a_82*a_8-2.00000*a_81*a_9-2.00000*a_80*a_10-2.00000*a_79*a_11-2.00000*a_78*a_12-2.00000*a_77*a_13-2.00000*a_76*a_14-2.00000*a_75*a_15-2.00000*a_74*a_16-2.00000*a_73*a_17-2.00000*a_72*a_18-2.00000*a_71*a_19-2.00000*a_70*a_20-2.00000*a_69*a_21-2.00000*a_68*a_22-2.00000*a_67*a_23-2.00000*a_66*a_24-2.00000*a_65*a_25-2.00000*a_64*a_26-2.00000*a_63*a_27-2.00000*a_62*a_28-2.00000*a_61*a_29-2.00000*a_60*a_30-2.00000*a_59*a_31-2.00000*a_58*a_32-2.00000*a_57*a_33-2.00000*a_56*a_34-2.00000*a_55*a_35-2.00000*a_54*a_36-2.00000*a_53*a_37-2.00000*a_52*a_38-2.00000*a_51*a_39-2.00000*a_50*a_40-2.00000*a_49*a_41-2.00000*a_48*a_42-2.00000*a_47*a_43-2.00000*a_46*a_44-a_45*a_45-2.00000*a_44*a_46-2.00000*a_43*a_47-2.00000*a_42*a_48-2.00000*a_41*a_49-2.00000*a_40*a_50-2.00000*a_39*a_51-2.00000*a_38*a_52-2.00000*a_37*a_53-2.00000*a_36*a_54-2.00000*a_35*a_55-2.00000*a_34*a_56-2.00000*a_33*a_57-2.00000*a_32*a_58-2.00000*a_31*a_59-2.00000*a_30*a_60-2.00000*a_29*a_61-2.00000*a_28*a_62-2.00000*a_27*a_63-2.00000*a_26*a_64-2.00000*a_25*a_65-2.00000*a_24*a_66-2.00000*a_23*a_67-2.00000*a_22*a_68-2.00000*a_21*a_69-2.00000*a_20*a_70-2.00000*a_19*a_71-2.00000*a_18*a_72-2.00000*a_17*a_73-2.00000*a_16*a_74-2.00000*a_15*a_75-2.00000*a_14*a_76-2.00000*a_13*a_77-2.00000*a_12*a_78-2.00000*a_11*a_79-2.00000*a_10*a_80-2.00000*a_9*a_81-2.00000*a_8*a_82-2.00000*a_7*a_83-2.00000*a_6*a_84-2.00000*a_5*a_85-2.00000*a_4*a_86-2.00000*a_3*a_87-2.00000*a_2*a_88-2.00000*a_1*a_89)/(2.00000*a_0 - pow(2.0000000*z_0, 90.0));
complex<double>a_91 = (-d -2.00000*a_90*a_1-2.00000*a_89*a_2-2.00000*a_88*a_3-2.00000*a_87*a_4-2.00000*a_86*a_5-2.00000*a_85*a_6-2.00000*a_84*a_7-2.00000*a_83*a_8-2.00000*a_82*a_9-2.00000*a_81*a_10-2.00000*a_80*a_11-2.00000*a_79*a_12-2.00000*a_78*a_13-2.00000*a_77*a_14-2.00000*a_76*a_15-2.00000*a_75*a_16-2.00000*a_74*a_17-2.00000*a_73*a_18-2.00000*a_72*a_19-2.00000*a_71*a_20-2.00000*a_70*a_21-2.00000*a_69*a_22-2.00000*a_68*a_23-2.00000*a_67*a_24-2.00000*a_66*a_25-2.00000*a_65*a_26-2.00000*a_64*a_27-2.00000*a_63*a_28-2.00000*a_62*a_29-2.00000*a_61*a_30-2.00000*a_60*a_31-2.00000*a_59*a_32-2.00000*a_58*a_33-2.00000*a_57*a_34-2.00000*a_56*a_35-2.00000*a_55*a_36-2.00000*a_54*a_37-2.00000*a_53*a_38-2.00000*a_52*a_39-2.00000*a_51*a_40-2.00000*a_50*a_41-2.00000*a_49*a_42-2.00000*a_48*a_43-2.00000*a_47*a_44-2.00000*a_46*a_45-2.00000*a_45*a_46-2.00000*a_44*a_47-2.00000*a_43*a_48-2.00000*a_42*a_49-2.00000*a_41*a_50-2.00000*a_40*a_51-2.00000*a_39*a_52-2.00000*a_38*a_53-2.00000*a_37*a_54-2.00000*a_36*a_55-2.00000*a_35*a_56-2.00000*a_34*a_57-2.00000*a_33*a_58-2.00000*a_32*a_59-2.00000*a_31*a_60-2.00000*a_30*a_61-2.00000*a_29*a_62-2.00000*a_28*a_63-2.00000*a_27*a_64-2.00000*a_26*a_65-2.00000*a_25*a_66-2.00000*a_24*a_67-2.00000*a_23*a_68-2.00000*a_22*a_69-2.00000*a_21*a_70-2.00000*a_20*a_71-2.00000*a_19*a_72-2.00000*a_18*a_73-2.00000*a_17*a_74-2.00000*a_16*a_75-2.00000*a_15*a_76-2.00000*a_14*a_77-2.00000*a_13*a_78-2.00000*a_12*a_79-2.00000*a_11*a_80-2.00000*a_10*a_81-2.00000*a_9*a_82-2.00000*a_8*a_83-2.00000*a_7*a_84-2.00000*a_6*a_85-2.00000*a_5*a_86-2.00000*a_4*a_87-2.00000*a_3*a_88-2.00000*a_2*a_89-2.00000*a_1*a_90)/(2.00000*a_0 - pow(2.0000000*z_0, 91.0));
complex<double>a_92 = (-d -2.00000*a_91*a_1-2.00000*a_90*a_2-2.00000*a_89*a_3-2.00000*a_88*a_4-2.00000*a_87*a_5-2.00000*a_86*a_6-2.00000*a_85*a_7-2.00000*a_84*a_8-2.00000*a_83*a_9-2.00000*a_82*a_10-2.00000*a_81*a_11-2.00000*a_80*a_12-2.00000*a_79*a_13-2.00000*a_78*a_14-2.00000*a_77*a_15-2.00000*a_76*a_16-2.00000*a_75*a_17-2.00000*a_74*a_18-2.00000*a_73*a_19-2.00000*a_72*a_20-2.00000*a_71*a_21-2.00000*a_70*a_22-2.00000*a_69*a_23-2.00000*a_68*a_24-2.00000*a_67*a_25-2.00000*a_66*a_26-2.00000*a_65*a_27-2.00000*a_64*a_28-2.00000*a_63*a_29-2.00000*a_62*a_30-2.00000*a_61*a_31-2.00000*a_60*a_32-2.00000*a_59*a_33-2.00000*a_58*a_34-2.00000*a_57*a_35-2.00000*a_56*a_36-2.00000*a_55*a_37-2.00000*a_54*a_38-2.00000*a_53*a_39-2.00000*a_52*a_40-2.00000*a_51*a_41-2.00000*a_50*a_42-2.00000*a_49*a_43-2.00000*a_48*a_44-2.00000*a_47*a_45-a_46*a_46-2.00000*a_45*a_47-2.00000*a_44*a_48-2.00000*a_43*a_49-2.00000*a_42*a_50-2.00000*a_41*a_51-2.00000*a_40*a_52-2.00000*a_39*a_53-2.00000*a_38*a_54-2.00000*a_37*a_55-2.00000*a_36*a_56-2.00000*a_35*a_57-2.00000*a_34*a_58-2.00000*a_33*a_59-2.00000*a_32*a_60-2.00000*a_31*a_61-2.00000*a_30*a_62-2.00000*a_29*a_63-2.00000*a_28*a_64-2.00000*a_27*a_65-2.00000*a_26*a_66-2.00000*a_25*a_67-2.00000*a_24*a_68-2.00000*a_23*a_69-2.00000*a_22*a_70-2.00000*a_21*a_71-2.00000*a_20*a_72-2.00000*a_19*a_73-2.00000*a_18*a_74-2.00000*a_17*a_75-2.00000*a_16*a_76-2.00000*a_15*a_77-2.00000*a_14*a_78-2.00000*a_13*a_79-2.00000*a_12*a_80-2.00000*a_11*a_81-2.00000*a_10*a_82-2.00000*a_9*a_83-2.00000*a_8*a_84-2.00000*a_7*a_85-2.00000*a_6*a_86-2.00000*a_5*a_87-2.00000*a_4*a_88-2.00000*a_3*a_89-2.00000*a_2*a_90-2.00000*a_1*a_91)/(2.00000*a_0 - pow(2.0000000*z_0, 92.0));
complex<double>a_93 = (-d -2.00000*a_92*a_1-2.00000*a_91*a_2-2.00000*a_90*a_3-2.00000*a_89*a_4-2.00000*a_88*a_5-2.00000*a_87*a_6-2.00000*a_86*a_7-2.00000*a_85*a_8-2.00000*a_84*a_9-2.00000*a_83*a_10-2.00000*a_82*a_11-2.00000*a_81*a_12-2.00000*a_80*a_13-2.00000*a_79*a_14-2.00000*a_78*a_15-2.00000*a_77*a_16-2.00000*a_76*a_17-2.00000*a_75*a_18-2.00000*a_74*a_19-2.00000*a_73*a_20-2.00000*a_72*a_21-2.00000*a_71*a_22-2.00000*a_70*a_23-2.00000*a_69*a_24-2.00000*a_68*a_25-2.00000*a_67*a_26-2.00000*a_66*a_27-2.00000*a_65*a_28-2.00000*a_64*a_29-2.00000*a_63*a_30-2.00000*a_62*a_31-2.00000*a_61*a_32-2.00000*a_60*a_33-2.00000*a_59*a_34-2.00000*a_58*a_35-2.00000*a_57*a_36-2.00000*a_56*a_37-2.00000*a_55*a_38-2.00000*a_54*a_39-2.00000*a_53*a_40-2.00000*a_52*a_41-2.00000*a_51*a_42-2.00000*a_50*a_43-2.00000*a_49*a_44-2.00000*a_48*a_45-2.00000*a_47*a_46-2.00000*a_46*a_47-2.00000*a_45*a_48-2.00000*a_44*a_49-2.00000*a_43*a_50-2.00000*a_42*a_51-2.00000*a_41*a_52-2.00000*a_40*a_53-2.00000*a_39*a_54-2.00000*a_38*a_55-2.00000*a_37*a_56-2.00000*a_36*a_57-2.00000*a_35*a_58-2.00000*a_34*a_59-2.00000*a_33*a_60-2.00000*a_32*a_61-2.00000*a_31*a_62-2.00000*a_30*a_63-2.00000*a_29*a_64-2.00000*a_28*a_65-2.00000*a_27*a_66-2.00000*a_26*a_67-2.00000*a_25*a_68-2.00000*a_24*a_69-2.00000*a_23*a_70-2.00000*a_22*a_71-2.00000*a_21*a_72-2.00000*a_20*a_73-2.00000*a_19*a_74-2.00000*a_18*a_75-2.00000*a_17*a_76-2.00000*a_16*a_77-2.00000*a_15*a_78-2.00000*a_14*a_79-2.00000*a_13*a_80-2.00000*a_12*a_81-2.00000*a_11*a_82-2.00000*a_10*a_83-2.00000*a_9*a_84-2.00000*a_8*a_85-2.00000*a_7*a_86-2.00000*a_6*a_87-2.00000*a_5*a_88-2.00000*a_4*a_89-2.00000*a_3*a_90-2.00000*a_2*a_91-2.00000*a_1*a_92)/(2.00000*a_0 - pow(2.0000000*z_0, 93.0));
complex<double>a_94 = (-d -2.00000*a_93*a_1-2.00000*a_92*a_2-2.00000*a_91*a_3-2.00000*a_90*a_4-2.00000*a_89*a_5-2.00000*a_88*a_6-2.00000*a_87*a_7-2.00000*a_86*a_8-2.00000*a_85*a_9-2.00000*a_84*a_10-2.00000*a_83*a_11-2.00000*a_82*a_12-2.00000*a_81*a_13-2.00000*a_80*a_14-2.00000*a_79*a_15-2.00000*a_78*a_16-2.00000*a_77*a_17-2.00000*a_76*a_18-2.00000*a_75*a_19-2.00000*a_74*a_20-2.00000*a_73*a_21-2.00000*a_72*a_22-2.00000*a_71*a_23-2.00000*a_70*a_24-2.00000*a_69*a_25-2.00000*a_68*a_26-2.00000*a_67*a_27-2.00000*a_66*a_28-2.00000*a_65*a_29-2.00000*a_64*a_30-2.00000*a_63*a_31-2.00000*a_62*a_32-2.00000*a_61*a_33-2.00000*a_60*a_34-2.00000*a_59*a_35-2.00000*a_58*a_36-2.00000*a_57*a_37-2.00000*a_56*a_38-2.00000*a_55*a_39-2.00000*a_54*a_40-2.00000*a_53*a_41-2.00000*a_52*a_42-2.00000*a_51*a_43-2.00000*a_50*a_44-2.00000*a_49*a_45-2.00000*a_48*a_46-a_47*a_47-2.00000*a_46*a_48-2.00000*a_45*a_49-2.00000*a_44*a_50-2.00000*a_43*a_51-2.00000*a_42*a_52-2.00000*a_41*a_53-2.00000*a_40*a_54-2.00000*a_39*a_55-2.00000*a_38*a_56-2.00000*a_37*a_57-2.00000*a_36*a_58-2.00000*a_35*a_59-2.00000*a_34*a_60-2.00000*a_33*a_61-2.00000*a_32*a_62-2.00000*a_31*a_63-2.00000*a_30*a_64-2.00000*a_29*a_65-2.00000*a_28*a_66-2.00000*a_27*a_67-2.00000*a_26*a_68-2.00000*a_25*a_69-2.00000*a_24*a_70-2.00000*a_23*a_71-2.00000*a_22*a_72-2.00000*a_21*a_73-2.00000*a_20*a_74-2.00000*a_19*a_75-2.00000*a_18*a_76-2.00000*a_17*a_77-2.00000*a_16*a_78-2.00000*a_15*a_79-2.00000*a_14*a_80-2.00000*a_13*a_81-2.00000*a_12*a_82-2.00000*a_11*a_83-2.00000*a_10*a_84-2.00000*a_9*a_85-2.00000*a_8*a_86-2.00000*a_7*a_87-2.00000*a_6*a_88-2.00000*a_5*a_89-2.00000*a_4*a_90-2.00000*a_3*a_91-2.00000*a_2*a_92-2.00000*a_1*a_93)/(2.00000*a_0 - pow(2.0000000*z_0, 94.0));
complex<double>a_95 = (-d -2.00000*a_94*a_1-2.00000*a_93*a_2-2.00000*a_92*a_3-2.00000*a_91*a_4-2.00000*a_90*a_5-2.00000*a_89*a_6-2.00000*a_88*a_7-2.00000*a_87*a_8-2.00000*a_86*a_9-2.00000*a_85*a_10-2.00000*a_84*a_11-2.00000*a_83*a_12-2.00000*a_82*a_13-2.00000*a_81*a_14-2.00000*a_80*a_15-2.00000*a_79*a_16-2.00000*a_78*a_17-2.00000*a_77*a_18-2.00000*a_76*a_19-2.00000*a_75*a_20-2.00000*a_74*a_21-2.00000*a_73*a_22-2.00000*a_72*a_23-2.00000*a_71*a_24-2.00000*a_70*a_25-2.00000*a_69*a_26-2.00000*a_68*a_27-2.00000*a_67*a_28-2.00000*a_66*a_29-2.00000*a_65*a_30-2.00000*a_64*a_31-2.00000*a_63*a_32-2.00000*a_62*a_33-2.00000*a_61*a_34-2.00000*a_60*a_35-2.00000*a_59*a_36-2.00000*a_58*a_37-2.00000*a_57*a_38-2.00000*a_56*a_39-2.00000*a_55*a_40-2.00000*a_54*a_41-2.00000*a_53*a_42-2.00000*a_52*a_43-2.00000*a_51*a_44-2.00000*a_50*a_45-2.00000*a_49*a_46-2.00000*a_48*a_47-2.00000*a_47*a_48-2.00000*a_46*a_49-2.00000*a_45*a_50-2.00000*a_44*a_51-2.00000*a_43*a_52-2.00000*a_42*a_53-2.00000*a_41*a_54-2.00000*a_40*a_55-2.00000*a_39*a_56-2.00000*a_38*a_57-2.00000*a_37*a_58-2.00000*a_36*a_59-2.00000*a_35*a_60-2.00000*a_34*a_61-2.00000*a_33*a_62-2.00000*a_32*a_63-2.00000*a_31*a_64-2.00000*a_30*a_65-2.00000*a_29*a_66-2.00000*a_28*a_67-2.00000*a_27*a_68-2.00000*a_26*a_69-2.00000*a_25*a_70-2.00000*a_24*a_71-2.00000*a_23*a_72-2.00000*a_22*a_73-2.00000*a_21*a_74-2.00000*a_20*a_75-2.00000*a_19*a_76-2.00000*a_18*a_77-2.00000*a_17*a_78-2.00000*a_16*a_79-2.00000*a_15*a_80-2.00000*a_14*a_81-2.00000*a_13*a_82-2.00000*a_12*a_83-2.00000*a_11*a_84-2.00000*a_10*a_85-2.00000*a_9*a_86-2.00000*a_8*a_87-2.00000*a_7*a_88-2.00000*a_6*a_89-2.00000*a_5*a_90-2.00000*a_4*a_91-2.00000*a_3*a_92-2.00000*a_2*a_93-2.00000*a_1*a_94)/(2.00000*a_0 - pow(2.0000000*z_0, 95.0));
complex<double>a_96 = (-d -2.00000*a_95*a_1-2.00000*a_94*a_2-2.00000*a_93*a_3-2.00000*a_92*a_4-2.00000*a_91*a_5-2.00000*a_90*a_6-2.00000*a_89*a_7-2.00000*a_88*a_8-2.00000*a_87*a_9-2.00000*a_86*a_10-2.00000*a_85*a_11-2.00000*a_84*a_12-2.00000*a_83*a_13-2.00000*a_82*a_14-2.00000*a_81*a_15-2.00000*a_80*a_16-2.00000*a_79*a_17-2.00000*a_78*a_18-2.00000*a_77*a_19-2.00000*a_76*a_20-2.00000*a_75*a_21-2.00000*a_74*a_22-2.00000*a_73*a_23-2.00000*a_72*a_24-2.00000*a_71*a_25-2.00000*a_70*a_26-2.00000*a_69*a_27-2.00000*a_68*a_28-2.00000*a_67*a_29-2.00000*a_66*a_30-2.00000*a_65*a_31-2.00000*a_64*a_32-2.00000*a_63*a_33-2.00000*a_62*a_34-2.00000*a_61*a_35-2.00000*a_60*a_36-2.00000*a_59*a_37-2.00000*a_58*a_38-2.00000*a_57*a_39-2.00000*a_56*a_40-2.00000*a_55*a_41-2.00000*a_54*a_42-2.00000*a_53*a_43-2.00000*a_52*a_44-2.00000*a_51*a_45-2.00000*a_50*a_46-2.00000*a_49*a_47-a_48*a_48-2.00000*a_47*a_49-2.00000*a_46*a_50-2.00000*a_45*a_51-2.00000*a_44*a_52-2.00000*a_43*a_53-2.00000*a_42*a_54-2.00000*a_41*a_55-2.00000*a_40*a_56-2.00000*a_39*a_57-2.00000*a_38*a_58-2.00000*a_37*a_59-2.00000*a_36*a_60-2.00000*a_35*a_61-2.00000*a_34*a_62-2.00000*a_33*a_63-2.00000*a_32*a_64-2.00000*a_31*a_65-2.00000*a_30*a_66-2.00000*a_29*a_67-2.00000*a_28*a_68-2.00000*a_27*a_69-2.00000*a_26*a_70-2.00000*a_25*a_71-2.00000*a_24*a_72-2.00000*a_23*a_73-2.00000*a_22*a_74-2.00000*a_21*a_75-2.00000*a_20*a_76-2.00000*a_19*a_77-2.00000*a_18*a_78-2.00000*a_17*a_79-2.00000*a_16*a_80-2.00000*a_15*a_81-2.00000*a_14*a_82-2.00000*a_13*a_83-2.00000*a_12*a_84-2.00000*a_11*a_85-2.00000*a_10*a_86-2.00000*a_9*a_87-2.00000*a_8*a_88-2.00000*a_7*a_89-2.00000*a_6*a_90-2.00000*a_5*a_91-2.00000*a_4*a_92-2.00000*a_3*a_93-2.00000*a_2*a_94-2.00000*a_1*a_95)/(2.00000*a_0 - pow(2.0000000*z_0, 96.0));
complex<double>a_97 = (-d -2.00000*a_96*a_1-2.00000*a_95*a_2-2.00000*a_94*a_3-2.00000*a_93*a_4-2.00000*a_92*a_5-2.00000*a_91*a_6-2.00000*a_90*a_7-2.00000*a_89*a_8-2.00000*a_88*a_9-2.00000*a_87*a_10-2.00000*a_86*a_11-2.00000*a_85*a_12-2.00000*a_84*a_13-2.00000*a_83*a_14-2.00000*a_82*a_15-2.00000*a_81*a_16-2.00000*a_80*a_17-2.00000*a_79*a_18-2.00000*a_78*a_19-2.00000*a_77*a_20-2.00000*a_76*a_21-2.00000*a_75*a_22-2.00000*a_74*a_23-2.00000*a_73*a_24-2.00000*a_72*a_25-2.00000*a_71*a_26-2.00000*a_70*a_27-2.00000*a_69*a_28-2.00000*a_68*a_29-2.00000*a_67*a_30-2.00000*a_66*a_31-2.00000*a_65*a_32-2.00000*a_64*a_33-2.00000*a_63*a_34-2.00000*a_62*a_35-2.00000*a_61*a_36-2.00000*a_60*a_37-2.00000*a_59*a_38-2.00000*a_58*a_39-2.00000*a_57*a_40-2.00000*a_56*a_41-2.00000*a_55*a_42-2.00000*a_54*a_43-2.00000*a_53*a_44-2.00000*a_52*a_45-2.00000*a_51*a_46-2.00000*a_50*a_47-2.00000*a_49*a_48-2.00000*a_48*a_49-2.00000*a_47*a_50-2.00000*a_46*a_51-2.00000*a_45*a_52-2.00000*a_44*a_53-2.00000*a_43*a_54-2.00000*a_42*a_55-2.00000*a_41*a_56-2.00000*a_40*a_57-2.00000*a_39*a_58-2.00000*a_38*a_59-2.00000*a_37*a_60-2.00000*a_36*a_61-2.00000*a_35*a_62-2.00000*a_34*a_63-2.00000*a_33*a_64-2.00000*a_32*a_65-2.00000*a_31*a_66-2.00000*a_30*a_67-2.00000*a_29*a_68-2.00000*a_28*a_69-2.00000*a_27*a_70-2.00000*a_26*a_71-2.00000*a_25*a_72-2.00000*a_24*a_73-2.00000*a_23*a_74-2.00000*a_22*a_75-2.00000*a_21*a_76-2.00000*a_20*a_77-2.00000*a_19*a_78-2.00000*a_18*a_79-2.00000*a_17*a_80-2.00000*a_16*a_81-2.00000*a_15*a_82-2.00000*a_14*a_83-2.00000*a_13*a_84-2.00000*a_12*a_85-2.00000*a_11*a_86-2.00000*a_10*a_87-2.00000*a_9*a_88-2.00000*a_8*a_89-2.00000*a_7*a_90-2.00000*a_6*a_91-2.00000*a_5*a_92-2.00000*a_4*a_93-2.00000*a_3*a_94-2.00000*a_2*a_95-2.00000*a_1*a_96)/(2.00000*a_0 - pow(2.0000000*z_0, 97.0));
complex<double>a_98 = (-d -2.00000*a_97*a_1-2.00000*a_96*a_2-2.00000*a_95*a_3-2.00000*a_94*a_4-2.00000*a_93*a_5-2.00000*a_92*a_6-2.00000*a_91*a_7-2.00000*a_90*a_8-2.00000*a_89*a_9-2.00000*a_88*a_10-2.00000*a_87*a_11-2.00000*a_86*a_12-2.00000*a_85*a_13-2.00000*a_84*a_14-2.00000*a_83*a_15-2.00000*a_82*a_16-2.00000*a_81*a_17-2.00000*a_80*a_18-2.00000*a_79*a_19-2.00000*a_78*a_20-2.00000*a_77*a_21-2.00000*a_76*a_22-2.00000*a_75*a_23-2.00000*a_74*a_24-2.00000*a_73*a_25-2.00000*a_72*a_26-2.00000*a_71*a_27-2.00000*a_70*a_28-2.00000*a_69*a_29-2.00000*a_68*a_30-2.00000*a_67*a_31-2.00000*a_66*a_32-2.00000*a_65*a_33-2.00000*a_64*a_34-2.00000*a_63*a_35-2.00000*a_62*a_36-2.00000*a_61*a_37-2.00000*a_60*a_38-2.00000*a_59*a_39-2.00000*a_58*a_40-2.00000*a_57*a_41-2.00000*a_56*a_42-2.00000*a_55*a_43-2.00000*a_54*a_44-2.00000*a_53*a_45-2.00000*a_52*a_46-2.00000*a_51*a_47-2.00000*a_50*a_48-a_49*a_49-2.00000*a_48*a_50-2.00000*a_47*a_51-2.00000*a_46*a_52-2.00000*a_45*a_53-2.00000*a_44*a_54-2.00000*a_43*a_55-2.00000*a_42*a_56-2.00000*a_41*a_57-2.00000*a_40*a_58-2.00000*a_39*a_59-2.00000*a_38*a_60-2.00000*a_37*a_61-2.00000*a_36*a_62-2.00000*a_35*a_63-2.00000*a_34*a_64-2.00000*a_33*a_65-2.00000*a_32*a_66-2.00000*a_31*a_67-2.00000*a_30*a_68-2.00000*a_29*a_69-2.00000*a_28*a_70-2.00000*a_27*a_71-2.00000*a_26*a_72-2.00000*a_25*a_73-2.00000*a_24*a_74-2.00000*a_23*a_75-2.00000*a_22*a_76-2.00000*a_21*a_77-2.00000*a_20*a_78-2.00000*a_19*a_79-2.00000*a_18*a_80-2.00000*a_17*a_81-2.00000*a_16*a_82-2.00000*a_15*a_83-2.00000*a_14*a_84-2.00000*a_13*a_85-2.00000*a_12*a_86-2.00000*a_11*a_87-2.00000*a_10*a_88-2.00000*a_9*a_89-2.00000*a_8*a_90-2.00000*a_7*a_91-2.00000*a_6*a_92-2.00000*a_5*a_93-2.00000*a_4*a_94-2.00000*a_3*a_95-2.00000*a_2*a_96-2.00000*a_1*a_97)/(2.00000*a_0 - pow(2.0000000*z_0, 98.0));
complex<double>a_99 = (-d -2.00000*a_98*a_1-2.00000*a_97*a_2-2.00000*a_96*a_3-2.00000*a_95*a_4-2.00000*a_94*a_5-2.00000*a_93*a_6-2.00000*a_92*a_7-2.00000*a_91*a_8-2.00000*a_90*a_9-2.00000*a_89*a_10-2.00000*a_88*a_11-2.00000*a_87*a_12-2.00000*a_86*a_13-2.00000*a_85*a_14-2.00000*a_84*a_15-2.00000*a_83*a_16-2.00000*a_82*a_17-2.00000*a_81*a_18-2.00000*a_80*a_19-2.00000*a_79*a_20-2.00000*a_78*a_21-2.00000*a_77*a_22-2.00000*a_76*a_23-2.00000*a_75*a_24-2.00000*a_74*a_25-2.00000*a_73*a_26-2.00000*a_72*a_27-2.00000*a_71*a_28-2.00000*a_70*a_29-2.00000*a_69*a_30-2.00000*a_68*a_31-2.00000*a_67*a_32-2.00000*a_66*a_33-2.00000*a_65*a_34-2.00000*a_64*a_35-2.00000*a_63*a_36-2.00000*a_62*a_37-2.00000*a_61*a_38-2.00000*a_60*a_39-2.00000*a_59*a_40-2.00000*a_58*a_41-2.00000*a_57*a_42-2.00000*a_56*a_43-2.00000*a_55*a_44-2.00000*a_54*a_45-2.00000*a_53*a_46-2.00000*a_52*a_47-2.00000*a_51*a_48-2.00000*a_50*a_49-2.00000*a_49*a_50-2.00000*a_48*a_51-2.00000*a_47*a_52-2.00000*a_46*a_53-2.00000*a_45*a_54-2.00000*a_44*a_55-2.00000*a_43*a_56-2.00000*a_42*a_57-2.00000*a_41*a_58-2.00000*a_40*a_59-2.00000*a_39*a_60-2.00000*a_38*a_61-2.00000*a_37*a_62-2.00000*a_36*a_63-2.00000*a_35*a_64-2.00000*a_34*a_65-2.00000*a_33*a_66-2.00000*a_32*a_67-2.00000*a_31*a_68-2.00000*a_30*a_69-2.00000*a_29*a_70-2.00000*a_28*a_71-2.00000*a_27*a_72-2.00000*a_26*a_73-2.00000*a_25*a_74-2.00000*a_24*a_75-2.00000*a_23*a_76-2.00000*a_22*a_77-2.00000*a_21*a_78-2.00000*a_20*a_79-2.00000*a_19*a_80-2.00000*a_18*a_81-2.00000*a_17*a_82-2.00000*a_16*a_83-2.00000*a_15*a_84-2.00000*a_14*a_85-2.00000*a_13*a_86-2.00000*a_12*a_87-2.00000*a_11*a_88-2.00000*a_10*a_89-2.00000*a_9*a_90-2.00000*a_8*a_91-2.00000*a_7*a_92-2.00000*a_6*a_93-2.00000*a_5*a_94-2.00000*a_4*a_95-2.00000*a_3*a_96-2.00000*a_2*a_97-2.00000*a_1*a_98)/(2.00000*a_0 - pow(2.0000000*z_0, 99.0));
complex<double>a_100 = (-d -2.00000*a_99*a_1-2.00000*a_98*a_2-2.00000*a_97*a_3-2.00000*a_96*a_4-2.00000*a_95*a_5-2.00000*a_94*a_6-2.00000*a_93*a_7-2.00000*a_92*a_8-2.00000*a_91*a_9-2.00000*a_90*a_10-2.00000*a_89*a_11-2.00000*a_88*a_12-2.00000*a_87*a_13-2.00000*a_86*a_14-2.00000*a_85*a_15-2.00000*a_84*a_16-2.00000*a_83*a_17-2.00000*a_82*a_18-2.00000*a_81*a_19-2.00000*a_80*a_20-2.00000*a_79*a_21-2.00000*a_78*a_22-2.00000*a_77*a_23-2.00000*a_76*a_24-2.00000*a_75*a_25-2.00000*a_74*a_26-2.00000*a_73*a_27-2.00000*a_72*a_28-2.00000*a_71*a_29-2.00000*a_70*a_30-2.00000*a_69*a_31-2.00000*a_68*a_32-2.00000*a_67*a_33-2.00000*a_66*a_34-2.00000*a_65*a_35-2.00000*a_64*a_36-2.00000*a_63*a_37-2.00000*a_62*a_38-2.00000*a_61*a_39-2.00000*a_60*a_40-2.00000*a_59*a_41-2.00000*a_58*a_42-2.00000*a_57*a_43-2.00000*a_56*a_44-2.00000*a_55*a_45-2.00000*a_54*a_46-2.00000*a_53*a_47-2.00000*a_52*a_48-2.00000*a_51*a_49-a_50*a_50-2.00000*a_49*a_51-2.00000*a_48*a_52-2.00000*a_47*a_53-2.00000*a_46*a_54-2.00000*a_45*a_55-2.00000*a_44*a_56-2.00000*a_43*a_57-2.00000*a_42*a_58-2.00000*a_41*a_59-2.00000*a_40*a_60-2.00000*a_39*a_61-2.00000*a_38*a_62-2.00000*a_37*a_63-2.00000*a_36*a_64-2.00000*a_35*a_65-2.00000*a_34*a_66-2.00000*a_33*a_67-2.00000*a_32*a_68-2.00000*a_31*a_69-2.00000*a_30*a_70-2.00000*a_29*a_71-2.00000*a_28*a_72-2.00000*a_27*a_73-2.00000*a_26*a_74-2.00000*a_25*a_75-2.00000*a_24*a_76-2.00000*a_23*a_77-2.00000*a_22*a_78-2.00000*a_21*a_79-2.00000*a_20*a_80-2.00000*a_19*a_81-2.00000*a_18*a_82-2.00000*a_17*a_83-2.00000*a_16*a_84-2.00000*a_15*a_85-2.00000*a_14*a_86-2.00000*a_13*a_87-2.00000*a_12*a_88-2.00000*a_11*a_89-2.00000*a_10*a_90-2.00000*a_9*a_91-2.00000*a_8*a_92-2.00000*a_7*a_93-2.00000*a_6*a_94-2.00000*a_5*a_95-2.00000*a_4*a_96-2.00000*a_3*a_97-2.00000*a_2*a_98-2.00000*a_1*a_99)/(2.00000*a_0 - pow(2.0000000*z_0, 100.0));

			
					
					
					/*	if(abs(a_0 + a_1*pow(z,1) + a_2*pow(z,2) + a_3*pow(z,3) + a_4*pow(z,4) + a_5*pow(z,5) + a_6*pow(z,6) + a_7*pow(z,7) + a_8*pow(z,8) + a_9*pow(z,9) + a_10*pow(z,10) + 
a_11*pow(z,11) + a_12*pow(z,12) + a_13*pow(z,13) + a_14*pow(z,14) + a_15*pow(z,15) + a_16*pow(z,16) + a_17*pow(z,17) + a_18*pow(z,18) + a_19*pow(z,19) + a_20*pow(z,20) + 
a_21*pow(z,21) + a_22*pow(z,22) + a_23*pow(z,23) + a_24*pow(z,24) + a_25*pow(z,25) + a_26*pow(z,26) + a_27*pow(z,27) + a_28*pow(z,28) + a_29*pow(z,29) + a_30*pow(z,30) + 
a_31*pow(z,31) + a_32*pow(z,32) + a_33*pow(z,33) + a_34*pow(z,34) + a_35*pow(z,35) + a_36*pow(z,36) + a_37*pow(z,37) + a_38*pow(z,38) + a_39*pow(z,39) + a_40*pow(z,40) + 
a_41*pow(z,41) + a_42*pow(z,42) + a_43*pow(z,43) + a_44*pow(z,44) + a_45*pow(z,45) + a_46*pow(z,46) + a_47*pow(z,47) + a_48*pow(z,48) + a_49*pow(z,49) + a_50*pow(z,50) + 
a_51*pow(z,51) + a_52*pow(z,52) + a_53*pow(z,53) + a_54*pow(z,54) + a_55*pow(z,55) + a_56*pow(z,56) + a_57*pow(z,57) + a_58*pow(z,58) + a_59*pow(z,59) + a_60*pow(z,60) + 
a_61*pow(z,61) + a_62*pow(z,62) + a_63*pow(z,63) + a_64*pow(z,64) + a_65*pow(z,65) + a_66*pow(z,66) + a_67*pow(z,67) + a_68*pow(z,68) + a_69*pow(z,69) + a_70*pow(z,70) + 
a_71*pow(z,71) + a_72*pow(z,72) + a_73*pow(z,73) + a_74*pow(z,74) + a_75*pow(z,75) + a_76*pow(z,76) + a_77*pow(z,77) + a_78*pow(z,78) + a_79*pow(z,79) + a_80*pow(z,80) + 
a_81*pow(z,81) + a_82*pow(z,82) + a_83*pow(z,83) + a_84*pow(z,84) + a_85*pow(z,85) + a_86*pow(z,86) + a_87*pow(z,87) + a_88*pow(z,88) + a_89*pow(z,89) + a_90*pow(z,90) + 
a_91*pow(z,91) + a_92*pow(z,92) + a_93*pow(z,93) + a_94*pow(z,94) + a_95*pow(z,95) + a_96*pow(z,96) + a_97*pow(z,97) + a_98*pow(z,98) + a_99*pow(z,99) + a_100*pow(z,100)) > lim)
					
						{*/
					
						for(i = 0; i < maxit; i++)
					
							{
						
							if(abs(z) < erad)
							
								{
							
								z = a_0 + a_1*pow(z,1) + a_2*pow(z,2) + a_3*pow(z,3) + a_4*pow(z,4) + a_5*pow(z,5) + a_6*pow(z,6) + a_7*pow(z,7) + a_8*pow(z,8) + a_9*pow(z,9) + a_10*pow(z,10) + 
a_11*pow(z,11) + a_12*pow(z,12) + a_13*pow(z,13) + a_14*pow(z,14) + a_15*pow(z,15) + a_16*pow(z,16) + a_17*pow(z,17) + a_18*pow(z,18) + a_19*pow(z,19) + a_20*pow(z,20) + 
a_21*pow(z,21) + a_22*pow(z,22) + a_23*pow(z,23) + a_24*pow(z,24) + a_25*pow(z,25) + a_26*pow(z,26) + a_27*pow(z,27) + a_28*pow(z,28) + a_29*pow(z,29) + a_30*pow(z,30) + 
a_31*pow(z,31) + a_32*pow(z,32) + a_33*pow(z,33) + a_34*pow(z,34) + a_35*pow(z,35) + a_36*pow(z,36) + a_37*pow(z,37) + a_38*pow(z,38) + a_39*pow(z,39) + a_40*pow(z,40) + 
a_41*pow(z,41) + a_42*pow(z,42) + a_43*pow(z,43) + a_44*pow(z,44) + a_45*pow(z,45) + a_46*pow(z,46) + a_47*pow(z,47) + a_48*pow(z,48) + a_49*pow(z,49) + a_50*pow(z,50) + 
a_51*pow(z,51) + a_52*pow(z,52) + a_53*pow(z,53) + a_54*pow(z,54) + a_55*pow(z,55) + a_56*pow(z,56) + a_57*pow(z,57) + a_58*pow(z,58) + a_59*pow(z,59) + a_60*pow(z,60) + 
a_61*pow(z,61) + a_62*pow(z,62) + a_63*pow(z,63) + a_64*pow(z,64) + a_65*pow(z,65) + a_66*pow(z,66) + a_67*pow(z,67) + a_68*pow(z,68) + a_69*pow(z,69) + a_70*pow(z,70) + 
a_71*pow(z,71) + a_72*pow(z,72) + a_73*pow(z,73) + a_74*pow(z,74) + a_75*pow(z,75) + a_76*pow(z,76) + a_77*pow(z,77) + a_78*pow(z,78) + a_79*pow(z,79) + a_80*pow(z,80) + 
a_81*pow(z,81) + a_82*pow(z,82) + a_83*pow(z,83) + a_84*pow(z,84) + a_85*pow(z,85) + a_86*pow(z,86) + a_87*pow(z,87) + a_88*pow(z,88) + a_89*pow(z,89) + a_90*pow(z,90) + 
a_91*pow(z,91) + a_92*pow(z,92) + a_93*pow(z,93) + a_94*pow(z,94) + a_95*pow(z,95) + a_96*pow(z,96) + a_97*pow(z,97) + a_98*pow(z,98) + a_99*pow(z,99) + a_100*pow(z,100);
								
								}
								
							
							else	
							
							{
							
				
								int j = 0;
								//for(int j = 0; j < int(log(lim/erad)/log(abs(2.00000*z_0))) ; j++)
								while (pow(abs(2.0*z_0), j) * erad < lim)
									{
									
									if(abs(z)>= pow(abs(2.0*(z_0)),j)*erad && abs(z) <= pow(abs(2.0*(z_0)),j+1)*erad)
										
										{
										
										
											
											z = a_0 + a_1*pow((z/(pow(abs(2.0*z_0),j+1))),1) + a_2*pow((z/(pow(abs(2.0*z_0),j+1))),2) + a_3*pow((z/(pow(abs(2.0*z_0),j+1))),3) + a_4*pow((z/(pow(abs(2.0*z_0),j+1))),4) + a_5*pow((z/(pow(abs(2.0*z_0),j+1))),5) + a_6*pow((z/(pow(abs(2.0*z_0),j+1))),6) + a_7*pow((z/(pow(abs(2.0*z_0),j+1))),7) + a_8*pow((z/(pow(abs(2.0*z_0),j+1))),8) + a_9*pow((z/(pow(abs(2.0*z_0),j+1))),9) + a_10*pow((z/(pow(abs(2.0*z_0),j+1))),10) + 
a_11*pow((z/(pow(abs(2.0*z_0),j+1))),11) + a_12*pow((z/(pow(abs(2.0*z_0),j+1))),12) + a_13*pow((z/(pow(abs(2.0*z_0),j+1))),13) + a_14*pow((z/(pow(abs(2.0*z_0),j+1))),14) + a_15*pow((z/(pow(abs(2.0*z_0),j+1))),15) + a_16*pow((z/(pow(abs(2.0*z_0),j+1))),16) + a_17*pow((z/(pow(abs(2.0*z_0),j+1))),17) + a_18*pow((z/(pow(abs(2.0*z_0),j+1))),18) + a_19*pow((z/(pow(abs(2.0*z_0),j+1))),19) + a_20*pow((z/(pow(abs(2.0*z_0),j+1))),20) + 
a_21*pow((z/(pow(abs(2.0*z_0),j+1))),21) + a_22*pow((z/(pow(abs(2.0*z_0),j+1))),22) + a_23*pow((z/(pow(abs(2.0*z_0),j+1))),23) + a_24*pow((z/(pow(abs(2.0*z_0),j+1))),24) + a_25*pow((z/(pow(abs(2.0*z_0),j+1))),25) + a_26*pow((z/(pow(abs(2.0*z_0),j+1))),26) + a_27*pow((z/(pow(abs(2.0*z_0),j+1))),27) + a_28*pow((z/(pow(abs(2.0*z_0),j+1))),28) + a_29*pow((z/(pow(abs(2.0*z_0),j+1))),29) + a_30*pow((z/(pow(abs(2.0*z_0),j+1))),30) + 
a_31*pow((z/(pow(abs(2.0*z_0),j+1))),31) + a_32*pow((z/(pow(abs(2.0*z_0),j+1))),32) + a_33*pow((z/(pow(abs(2.0*z_0),j+1))),33) + a_34*pow((z/(pow(abs(2.0*z_0),j+1))),34) + a_35*pow((z/(pow(abs(2.0*z_0),j+1))),35) + a_36*pow((z/(pow(abs(2.0*z_0),j+1))),36) + a_37*pow((z/(pow(abs(2.0*z_0),j+1))),37) + a_38*pow((z/(pow(abs(2.0*z_0),j+1))),38) + a_39*pow((z/(pow(abs(2.0*z_0),j+1))),39) + a_40*pow((z/(pow(abs(2.0*z_0),j+1))),40) + 
a_41*pow((z/(pow(abs(2.0*z_0),j+1))),41) + a_42*pow((z/(pow(abs(2.0*z_0),j+1))),42) + a_43*pow((z/(pow(abs(2.0*z_0),j+1))),43) + a_44*pow((z/(pow(abs(2.0*z_0),j+1))),44) + a_45*pow((z/(pow(abs(2.0*z_0),j+1))),45) + a_46*pow((z/(pow(abs(2.0*z_0),j+1))),46) + a_47*pow((z/(pow(abs(2.0*z_0),j+1))),47) + a_48*pow((z/(pow(abs(2.0*z_0),j+1))),48) + a_49*pow((z/(pow(abs(2.0*z_0),j+1))),49) + a_50*pow((z/(pow(abs(2.0*z_0),j+1))),50) + 
a_51*pow((z/(pow(abs(2.0*z_0),j+1))),51) + a_52*pow((z/(pow(abs(2.0*z_0),j+1))),52) + a_53*pow((z/(pow(abs(2.0*z_0),j+1))),53) + a_54*pow((z/(pow(abs(2.0*z_0),j+1))),54) + a_55*pow((z/(pow(abs(2.0*z_0),j+1))),55) + a_56*pow((z/(pow(abs(2.0*z_0),j+1))),56) + a_57*pow((z/(pow(abs(2.0*z_0),j+1))),57) + a_58*pow((z/(pow(abs(2.0*z_0),j+1))),58) + a_59*pow((z/(pow(abs(2.0*z_0),j+1))),59) + a_60*pow((z/(pow(abs(2.0*z_0),j+1))),60) + 
a_61*pow((z/(pow(abs(2.0*z_0),j+1))),61) + a_62*pow((z/(pow(abs(2.0*z_0),j+1))),62) + a_63*pow((z/(pow(abs(2.0*z_0),j+1))),63) + a_64*pow((z/(pow(abs(2.0*z_0),j+1))),64) + a_65*pow((z/(pow(abs(2.0*z_0),j+1))),65) + a_66*pow((z/(pow(abs(2.0*z_0),j+1))),66) + a_67*pow((z/(pow(abs(2.0*z_0),j+1))),67) + a_68*pow((z/(pow(abs(2.0*z_0),j+1))),68) + a_69*pow((z/(pow(abs(2.0*z_0),j+1))),69) + a_70*pow((z/(pow(abs(2.0*z_0),j+1))),70) + 
a_71*pow((z/(pow(abs(2.0*z_0),j+1))),71) + a_72*pow((z/(pow(abs(2.0*z_0),j+1))),72) + a_73*pow((z/(pow(abs(2.0*z_0),j+1))),73) + a_74*pow((z/(pow(abs(2.0*z_0),j+1))),74) + a_75*pow((z/(pow(abs(2.0*z_0),j+1))),75) + a_76*pow((z/(pow(abs(2.0*z_0),j+1))),76) + a_77*pow((z/(pow(abs(2.0*z_0),j+1))),77) + a_78*pow((z/(pow(abs(2.0*z_0),j+1))),78) + a_79*pow((z/(pow(abs(2.0*z_0),j+1))),79) + a_80*pow((z/(pow(abs(2.0*z_0),j+1))),80) + 
a_81*pow((z/(pow(abs(2.0*z_0),j+1))),81) + a_82*pow((z/(pow(abs(2.0*z_0),j+1))),82) + a_83*pow((z/(pow(abs(2.0*z_0),j+1))),83) + a_84*pow((z/(pow(abs(2.0*z_0),j+1))),84) + a_85*pow((z/(pow(abs(2.0*z_0),j+1))),85) + a_86*pow((z/(pow(abs(2.0*z_0),j+1))),86) + a_87*pow((z/(pow(abs(2.0*z_0),j+1))),87) + a_88*pow((z/(pow(abs(2.0*z_0),j+1))),88) + a_89*pow((z/(pow(abs(2.0*z_0),j+1))),89) + a_90*pow((z/(pow(abs(2.0*z_0),j+1))),90) + 
a_91*pow((z/(pow(abs(2.0*z_0),j+1))),91) + a_92*pow((z/(pow(abs(2.0*z_0),j+1))),92) + a_93*pow((z/(pow(abs(2.0*z_0),j+1))),93) + a_94*pow((z/(pow(abs(2.0*z_0),j+1))),94) + a_95*pow((z/(pow(abs(2.0*z_0),j+1))),95) + a_96*pow((z/(pow(abs(2.0*z_0),j+1))),96) + a_97*pow((z/(pow(abs(2.0*z_0),j+1))),97) + a_98*pow((z/(pow(abs(2.0*z_0),j+1))),98) + a_99*pow((z/(pow(abs(2.0*z_0),j+1))),99) + a_100*pow((z/(pow(abs(2.0*z_0),j+1))),100); 
									
											for(int k = 0; k < j; k++)
										
												z = z*z + d;
											break;
											
										}
									j+=1;
							
									}
							
							}
																	
							i++;
							if(i ==maxit) break;
							if(abs(z) > lim) break;
							if(!isfinite(abs(z))) break;
								
						
						
						
							}
							
					/*	}
					
					else i = 0;*/
					return_val = (i-maxit);
										
								
					"""
		
		#checkset = int(weave.inline(code2, ['realval', 'imagval', 'maxit', 'realconst', 'imagconst', 'plmin', 'realz_0', 'imagz_0', 'erad', 'lim1' ], type_converters=converters.blitz))
		checkset = int(weave.inline(code2, ['realval', 'imagval', 'maxit', 'realconst', 'imagconst', 'plmin', 'erad', 'lim1' ], type_converters=converters.blitz))
					
		
		if checkset == 0:
			#pt = Point(j, i)
			#pt.setFill('black')
			#pt.draw(win)	
			
				
			draw.point((j,i), fill=(0,0,0))


		elif checkset == -maxit:
			
			draw.point((j,i), fill=(0,0,255))
			
		else:
		
			r, g, b, = 0, 0, 0
			check = -1*checkset
			
			
			r = checkset%139 + checkset%109 + checkset%7
			b = checkset%131 + checkset%107 + checkset%17
			g = checkset%23 + checkset%31 + checkset%53 + checkset%113 + checkset%2 + checkset%3 + checkset%17 + checkset%13
			draw.point((j, i), fill=(r,g,b)) 

			
			
			
		c = c + (0.0025)*scale + 0.0j
	print c
	c = c - (10.00*(scale) + (scale)*(0.0025j))


del draw

#filename = "L(z^2 + " + str(realconst) + "+ " + str(imagconst) + "i" + ")numiterations=" + str(maxit) + "erad="+ str(erad) +";z_0=(" + str(realz_0) + " + " + str(imagz_0) + ")X" + str(zoom) + str(centre) + str(plmin) + "escape=" + str(lim1) + "deg=100.png"
filename = "L(z^2 + " + str(realconst) + "+ " + str(imagconst) + "i" + ")numiterations=" + str(maxit) + "erad="+ str(erad) + ")X" + str(zoom) + str(centre) + str(plmin) + "escape=" + str(lim1) + "deg=100.png"

im.save(filename, "PNG")	




 


